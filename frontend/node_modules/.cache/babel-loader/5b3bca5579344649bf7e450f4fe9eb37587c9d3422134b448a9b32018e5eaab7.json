{"ast":null,"code":"var _jsxFileName = \"/Users/sarang_daddy/Documents/second-hand/frontend/src/components/UploadPhoto/index.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useContext, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { postSalesItemContext } from '../../context/SalesItem/useContext';\nimport * as S from './styles';\nimport Icon from '../Icon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n//TODO : FromData를 로컬스토리지에 저장하는것은 불가능하다. 파일을 업로드 하는 순간 DB에 저장해야함.\n\nconst UploadPhoto = () => {\n  _s();\n  const maxImageCount = 10;\n  const fileInputRef = useRef(null);\n  const {\n    setPostObject\n  } = useContext(postSalesItemContext);\n  const [uploadedCount, setUploadedCount] = useState(0);\n  const [uploadedImages, setUploadedImages] = useState([]);\n  const [isModalOpen, setModalOpen] = useState(false);\n  const handleDeleteBtnClick = id => {\n    setUploadedImages(prevImages => prevImages.filter(image => image.id !== id));\n    setUploadedCount(prevCount => prevCount - 1);\n    setPostObject(prevPostObject => {\n      const updatedFiles = prevPostObject.files ? prevPostObject.files.filter((_, index) => index !== uploadedImages.findIndex(image => image.id === id)) : null;\n      return {\n        ...prevPostObject,\n        files: updatedFiles\n      };\n    });\n  };\n  const handleUploadImage = event => {\n    const files = Array.from(event.target.files || []);\n    if (uploadedImages.length + files.length > maxImageCount) {\n      setModalOpen(true);\n      return;\n    }\n    files.forEach(file => {\n      const imageUrl = URL.createObjectURL(file);\n      localStorage.setItem(file.name, imageUrl);\n      const isDuplicate = uploadedImages.some(image => image.file.name === file.name && image.file.size === file.size);\n      if (!isDuplicate) {\n        const newUploadedImage = {\n          id: uuidv4(),\n          imageUrl,\n          file\n        };\n        setUploadedImages(prevImages => [...prevImages, newUploadedImage]);\n        setUploadedCount(prevCount => prevCount + 1);\n        const formData = new FormData();\n        formData.append('productImageUrls', file);\n        setPostObject(prevPostObject => ({\n          ...prevPostObject,\n          files: [...(prevPostObject.files || []), formData]\n        }));\n      }\n    });\n    event.target.value = '';\n  };\n  const handleUploadIconClick = () => {\n    var _fileInputRef$current;\n    (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n  };\n  const handleCloseModal = () => {\n    setModalOpen(false);\n  };\n  useEffect(() => {\n    const storedImages = [];\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      const imageUrl = localStorage.getItem(key);\n      if (imageUrl) {\n        // 로컬 스토리지에서 불러온 이미지 URL을 사용\n        const uploadedImage = {\n          id: uuidv4(),\n          imageUrl,\n          file: new File([], key) // file 객체는 필요에 따라 다르게 구성\n        };\n\n        storedImages.push(uploadedImage);\n      }\n    }\n    setUploadedImages(storedImages);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(S.UploadPhotoContainer, {\n      children: [/*#__PURE__*/_jsxDEV(S.UploadIcon, {\n        onClick: handleUploadIconClick,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [uploadedCount, \" / \", maxImageCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(S.UploadInput, {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleUploadImage,\n          ref: fileInputRef,\n          multiple: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Photos, {\n        children: uploadedImages.map((image, index) => /*#__PURE__*/_jsxDEV(S.PhotoElement, {\n          children: [index === 0 ? /*#__PURE__*/_jsxDEV(S.MainPhoto, {\n            children: \"\\uB300\\uD45C \\uC0AC\\uC9C4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 30\n          }, this) : null, /*#__PURE__*/_jsxDEV(S.Photo, {\n            src: image.imageUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(S.DeleteBtn, {\n            onClick: () => handleDeleteBtnClick(image.id),\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              name: \"x\",\n              width: \"20\",\n              height: \"20\",\n              fill: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)]\n        }, image.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(S.ModalDim, {\n      children: /*#__PURE__*/_jsxDEV(S.ModalContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uC0AC\\uC9C4\\uC740 \\uCD5C\\uB300 10\\uC7A5\\uAE4C\\uC9C0 \\uB4F1\\uB85D \\uAC00\\uB2A5\\uD569\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(S.ModalBtns, {\n          children: /*#__PURE__*/_jsxDEV(S.ModalBtn, {\n            onClick: handleCloseModal,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uB2EB\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(UploadPhoto, \"ISStcRqqEnbAEBeq6f79Mr5O3/E=\");\n_c = UploadPhoto;\nexport default UploadPhoto;\nvar _c;\n$RefreshReg$(_c, \"UploadPhoto\");","map":{"version":3,"names":["useState","useRef","useContext","useEffect","v4","uuidv4","postSalesItemContext","S","Icon","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadPhoto","_s","maxImageCount","fileInputRef","setPostObject","uploadedCount","setUploadedCount","uploadedImages","setUploadedImages","isModalOpen","setModalOpen","handleDeleteBtnClick","id","prevImages","filter","image","prevCount","prevPostObject","updatedFiles","files","_","index","findIndex","handleUploadImage","event","Array","from","target","length","forEach","file","imageUrl","URL","createObjectURL","localStorage","setItem","name","isDuplicate","some","size","newUploadedImage","formData","FormData","append","value","handleUploadIconClick","_fileInputRef$current","current","click","handleCloseModal","storedImages","i","key","getItem","uploadedImage","File","push","children","UploadPhotoContainer","UploadIcon","onClick","fileName","_jsxFileName","lineNumber","columnNumber","UploadInput","type","accept","onChange","ref","multiple","Photos","map","PhotoElement","MainPhoto","Photo","src","DeleteBtn","width","height","fill","ModalDim","ModalContainer","ModalBtns","ModalBtn","_c","$RefreshReg$"],"sources":["/Users/sarang_daddy/Documents/second-hand/frontend/src/components/UploadPhoto/index.tsx"],"sourcesContent":["import { useState, ChangeEvent, useRef, useContext, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport {\n  postSalesItemContext,\n  PostObjectType,\n} from '../../context/SalesItem/useContext';\n\nimport * as S from './styles';\nimport Icon from '../Icon';\n\ninterface UploadedImageType {\n  id: string;\n  imageUrl: string;\n  file: File;\n}\n\n//TODO : FromData를 로컬스토리지에 저장하는것은 불가능하다. 파일을 업로드 하는 순간 DB에 저장해야함.\n\nconst UploadPhoto = () => {\n  const maxImageCount = 10;\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const { setPostObject } = useContext(postSalesItemContext);\n  const [uploadedCount, setUploadedCount] = useState<number>(0);\n  const [uploadedImages, setUploadedImages] = useState<UploadedImageType[]>([]);\n  const [isModalOpen, setModalOpen] = useState(false);\n\n  const handleDeleteBtnClick = (id: string) => {\n    setUploadedImages((prevImages) =>\n      prevImages.filter((image) => image.id !== id),\n    );\n    setUploadedCount((prevCount) => prevCount - 1);\n\n    setPostObject((prevPostObject: PostObjectType) => {\n      const updatedFiles = prevPostObject.files\n        ? prevPostObject.files.filter(\n            (_, index) =>\n              index !== uploadedImages.findIndex((image) => image.id === id),\n          )\n        : null;\n\n      return {\n        ...prevPostObject,\n        files: updatedFiles,\n      };\n    });\n  };\n\n  const handleUploadImage = (event: ChangeEvent<HTMLInputElement>) => {\n    const files = Array.from(event.target.files || []);\n\n    if (uploadedImages.length + files.length > maxImageCount) {\n      setModalOpen(true);\n      return;\n    }\n\n    files.forEach((file) => {\n      const imageUrl = URL.createObjectURL(file);\n\n      localStorage.setItem(file.name, imageUrl);\n\n      const isDuplicate = uploadedImages.some(\n        (image) =>\n          image.file.name === file.name && image.file.size === file.size,\n      );\n\n      if (!isDuplicate) {\n        const newUploadedImage: UploadedImageType = {\n          id: uuidv4(),\n          imageUrl,\n          file,\n        };\n\n        setUploadedImages((prevImages) => [...prevImages, newUploadedImage]);\n        setUploadedCount((prevCount) => prevCount + 1);\n\n        const formData = new FormData();\n        formData.append('productImageUrls', file);\n\n        setPostObject((prevPostObject: PostObjectType) => ({\n          ...prevPostObject,\n          files: [...(prevPostObject.files || []), formData],\n        }));\n      }\n    });\n    event.target.value = '';\n  };\n\n  const handleUploadIconClick = () => {\n    fileInputRef.current?.click();\n  };\n\n  const handleCloseModal = () => {\n    setModalOpen(false);\n  };\n\n  useEffect(() => {\n    const storedImages: UploadedImageType[] = [];\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      const imageUrl = localStorage.getItem(key!);\n      if (imageUrl) {\n        // 로컬 스토리지에서 불러온 이미지 URL을 사용\n        const uploadedImage: UploadedImageType = {\n          id: uuidv4(),\n          imageUrl,\n          file: new File([], key!), // file 객체는 필요에 따라 다르게 구성\n        };\n        storedImages.push(uploadedImage);\n      }\n    }\n    setUploadedImages(storedImages);\n  }, []);\n\n  return (\n    <>\n      <S.UploadPhotoContainer>\n        <S.UploadIcon onClick={handleUploadIconClick}>\n          <Icon name=\"camera\" />\n          <span>\n            {uploadedCount} / {maxImageCount}\n          </span>\n          <S.UploadInput\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={handleUploadImage}\n            ref={fileInputRef}\n            multiple\n          />\n        </S.UploadIcon>\n        <S.Photos>\n          {uploadedImages.map((image, index) => (\n            <S.PhotoElement key={image.id}>\n              {index === 0 ? <S.MainPhoto>대표 사진</S.MainPhoto> : null}\n              <S.Photo src={image.imageUrl} />\n              <S.DeleteBtn onClick={() => handleDeleteBtnClick(image.id)}>\n                <Icon name=\"x\" width=\"20\" height=\"20\" fill=\"white\" />\n              </S.DeleteBtn>\n            </S.PhotoElement>\n          ))}\n        </S.Photos>\n      </S.UploadPhotoContainer>\n      {isModalOpen && (\n        <S.ModalDim>\n          <S.ModalContainer>\n            <p>사진은 최대 10장까지 등록 가능합니다.</p>\n            <S.ModalBtns>\n              <S.ModalBtn onClick={handleCloseModal}>\n                <span>닫기</span>\n              </S.ModalBtn>\n            </S.ModalBtns>\n          </S.ModalContainer>\n        </S.ModalDim>\n      )}\n    </>\n  );\n};\n\nexport default UploadPhoto;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}