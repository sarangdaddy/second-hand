{"ast":null,"code":"var _jsxFileName = \"/Users/sarang_daddy/Documents/second-hand/frontend/src/pages/Register/index.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as S from './styles';\nimport Icon from '../../components/Icon';\nimport NavBarTitle from '../../components/NavBarTitle';\nimport { HOME, LOGIN } from '../../constants/routeUrl';\nimport { useAuthContext } from '../../context/Auth';\nimport { postJoin } from '../../api/member';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const searchParams = new URLSearchParams(window.location.search);\n  const nickname = searchParams.get('nickname');\n  const profileUrl = searchParams.get('profileUrl');\n  const oauthId = searchParams.get('oauthId');\n  const [nicknameInputValue, setNicknameValue] = useState(nickname);\n  const [profileImageFile, setProfileImageFile] = useState(null);\n  const {\n    handleLogin\n  } = useAuthContext();\n  const profileImageInputRef = useRef(null);\n  const navigate = useNavigate();\n  const onProfileImageClick = () => {\n    if (!profileImageInputRef.current) throw Error('profileImageRef in not assigned');\n    profileImageInputRef.current.click();\n  };\n  const onProfileImageChange = e => {\n    if (e.target.files && e.target.files.length > 0) {\n      setProfileImageFile(e.target.files[0]);\n    }\n  };\n  const onNicknameChange = e => {\n    setNicknameValue(e.currentTarget.value);\n  };\n  const onSubmit = async () => {\n    const res = await postJoin(nicknameInputValue, profileImageFile, oauthId);\n    if (res.data.success) {\n      const {\n        jwt\n      } = res.data.data;\n      handleLogin(jwt);\n      navigate(HOME);\n    } else {\n      navigate(LOGIN);\n    }\n  };\n  useEffect(() => {\n    async function convertImageUrlToFile(imageUrl) {\n      const response = await fetch(imageUrl);\n      const blob = await response.blob();\n      const file = new File([blob], 'profile.jpg', {\n        type: 'image/jpeg'\n      });\n      setProfileImageFile(file);\n    }\n    convertImageUrlToFile(profileUrl);\n  }, []);\n  const profileImageUrl = useMemo(() => {\n    return profileImageFile ? URL.createObjectURL(profileImageFile) : '';\n  }, [profileImageFile]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBarTitle, {\n      type: \"low\",\n      prevTitle: \"\\uB2EB\\uAE30\",\n      centerTitle: \"\\uD68C\\uC6D0\\uAC00\\uC785\",\n      rightTitle: \"\\uC644\\uB8CC\",\n      rightTitleClick: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.Container, {\n      children: [/*#__PURE__*/_jsxDEV(S.ProfileImageButton, {\n        circle: true,\n        onClick: onProfileImageClick,\n        profileImageUrl: profileImageUrl,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/jpg, image/jpeg, image/png\",\n          multiple: true,\n          ref: profileImageInputRef,\n          style: {\n            display: 'none'\n          },\n          onChange: onProfileImageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.ProfileIdInputBox, {\n        children: [/*#__PURE__*/_jsxDEV(S.ProfileIdLabel, {\n          htmlFor: \"profile-id\",\n          children: \"\\uB2C9\\uB124\\uC784\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(S.ProfileIdInput, {\n          id: \"profile-id\",\n          type: \"text\",\n          placeholder: \"\\uB2C9\\uB124\\uC784\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n          value: nicknameInputValue,\n          onChange: e => onNicknameChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Register, \"tG15XW3Bapy3Rg3FB0m8gC8It4g=\", false, function () {\n  return [useAuthContext, useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useEffect","useRef","useState","useMemo","useNavigate","S","Icon","NavBarTitle","HOME","LOGIN","useAuthContext","postJoin","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","searchParams","URLSearchParams","window","location","search","nickname","get","profileUrl","oauthId","nicknameInputValue","setNicknameValue","profileImageFile","setProfileImageFile","handleLogin","profileImageInputRef","navigate","onProfileImageClick","current","Error","click","onProfileImageChange","e","target","files","length","onNicknameChange","currentTarget","value","onSubmit","res","data","success","jwt","convertImageUrlToFile","imageUrl","response","fetch","blob","file","File","type","profileImageUrl","URL","createObjectURL","children","prevTitle","centerTitle","rightTitle","rightTitleClick","fileName","_jsxFileName","lineNumber","columnNumber","Container","ProfileImageButton","circle","onClick","name","accept","multiple","ref","style","display","onChange","ProfileIdInputBox","ProfileIdLabel","htmlFor","ProfileIdInput","id","placeholder","_c","$RefreshReg$"],"sources":["/Users/sarang_daddy/Documents/second-hand/frontend/src/pages/Register/index.tsx"],"sourcesContent":["import { useEffect, useRef, useState, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport * as S from './styles';\n\nimport Icon from '../../components/Icon';\nimport NavBarTitle from '../../components/NavBarTitle';\nimport { HOME, LOGIN } from '../../constants/routeUrl';\nimport { useAuthContext } from '../../context/Auth';\nimport { postJoin } from '../../api/member';\n\nconst Register = () => {\n  const searchParams = new URLSearchParams(window.location.search);\n  const nickname = searchParams.get('nickname') as string;\n  const profileUrl = searchParams.get('profileUrl') as string;\n  const oauthId = searchParams.get('oauthId') as string;\n\n  const [nicknameInputValue, setNicknameValue] = useState<string>(nickname);\n  const [profileImageFile, setProfileImageFile] = useState<File | null>(null);\n  const { handleLogin } = useAuthContext();\n  const profileImageInputRef = useRef<HTMLInputElement>(null);\n  const navigate = useNavigate();\n\n  const onProfileImageClick = () => {\n    if (!profileImageInputRef.current)\n      throw Error('profileImageRef in not assigned');\n    profileImageInputRef.current.click();\n  };\n\n  const onProfileImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files.length > 0) {\n      setProfileImageFile(e.target.files[0]);\n    }\n  };\n\n  const onNicknameChange = (e: React.FormEvent<HTMLInputElement>) => {\n    setNicknameValue(e.currentTarget.value);\n  };\n\n  const onSubmit = async () => {\n    const res = await postJoin(\n      nicknameInputValue,\n      profileImageFile as File,\n      oauthId,\n    );\n\n    if (res.data.success) {\n      const { jwt } = res.data.data;\n      handleLogin(jwt);\n      navigate(HOME);\n    } else {\n      navigate(LOGIN);\n    }\n  };\n\n  useEffect(() => {\n    async function convertImageUrlToFile(imageUrl: string) {\n      const response = await fetch(imageUrl);\n      const blob = await response.blob();\n      const file = new File([blob], 'profile.jpg', { type: 'image/jpeg' });\n      setProfileImageFile(file);\n    }\n\n    convertImageUrlToFile(profileUrl);\n  }, []);\n\n  const profileImageUrl = useMemo(() => {\n    return profileImageFile ? URL.createObjectURL(profileImageFile) : '';\n  }, [profileImageFile]);\n\n  return (\n    <>\n      <NavBarTitle\n        type=\"low\"\n        prevTitle=\"닫기\"\n        centerTitle=\"회원가입\"\n        rightTitle=\"완료\"\n        rightTitleClick={onSubmit}\n      />\n      <S.Container>\n        <S.ProfileImageButton\n          circle\n          onClick={onProfileImageClick}\n          profileImageUrl={profileImageUrl}\n        >\n          <Icon name=\"camera\" />\n          <input\n            type=\"file\"\n            accept=\"image/jpg, image/jpeg, image/png\"\n            multiple\n            ref={profileImageInputRef}\n            style={{ display: 'none' }}\n            onChange={onProfileImageChange}\n          />\n        </S.ProfileImageButton>\n\n        <S.ProfileIdInputBox>\n          <S.ProfileIdLabel htmlFor=\"profile-id\">닉네임</S.ProfileIdLabel>\n          <S.ProfileIdInput\n            id=\"profile-id\"\n            type=\"text\"\n            placeholder=\"닉네임을 입력하세요\"\n            value={nicknameInputValue}\n            onChange={(e) => onNicknameChange(e)}\n          />\n        </S.ProfileIdInputBox>\n      </S.Container>\n    </>\n  );\n};\nexport default Register;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}