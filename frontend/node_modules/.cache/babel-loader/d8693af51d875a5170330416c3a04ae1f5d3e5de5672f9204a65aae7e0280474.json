{"ast":null,"code":"import { axiosInstanceWithBearer } from './axios';\nexport const getRoomsList = async token => {\n  try {\n    const res = await axiosInstanceWithBearer.get(`/chat/rooms`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return res.data.data;\n  } catch (error) {\n    console.error('방 리스트 불러오기 에러:', error);\n  }\n};\nexport const postNewChatRoom = async (token, productId) => {\n  try {\n    const res = await axiosInstanceWithBearer.post(`/chat/room/create`, {\n      productId: productId\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return res.data.data.roomId;\n  } catch (error) {\n    console.error('방 생성 에러:', error);\n  }\n};\nexport const getChatDetails = async (token, curRoomId) => {\n  try {\n    const res = await axiosInstanceWithBearer.get(`/chat/room/history/${curRoomId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return res.data.data.messageHistory;\n  } catch (error) {\n    console.error('채팅 내역 조회 에러', error);\n  }\n};","map":{"version":3,"names":["axiosInstanceWithBearer","getRoomsList","token","res","get","headers","Authorization","data","error","console","postNewChatRoom","productId","post","roomId","getChatDetails","curRoomId","messageHistory"],"sources":["/Users/sarang_daddy/Documents/second-hand/frontend/src/api/chat.ts"],"sourcesContent":["import { axiosInstanceWithBearer } from './axios';\n\nexport const getRoomsList = async (token: string | null) => {\n  try {\n    const res = await axiosInstanceWithBearer.get(`/chat/rooms`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return res.data.data;\n  } catch (error) {\n    console.error('방 리스트 불러오기 에러:', error);\n  }\n};\n\nexport const postNewChatRoom = async (\n  token: string | null,\n  productId: string,\n) => {\n  try {\n    const res = await axiosInstanceWithBearer.post(\n      `/chat/room/create`,\n      {\n        productId: productId,\n      },\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      },\n    );\n    return res.data.data.roomId;\n  } catch (error) {\n    console.error('방 생성 에러:', error);\n  }\n};\n\nexport const getChatDetails = async (\n  token: string | null,\n  curRoomId: string | undefined,\n) => {\n  try {\n    const res = await axiosInstanceWithBearer.get(\n      `/chat/room/history/${curRoomId}`,\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      },\n    );\n    return res.data.data.messageHistory;\n  } catch (error) {\n    console.error('채팅 내역 조회 에러', error);\n  }\n};\n"],"mappings":"AAAA,SAASA,uBAAuB,QAAQ,SAAS;AAEjD,OAAO,MAAMC,YAAY,GAAG,MAAOC,KAAoB,IAAK;EAC1D,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMH,uBAAuB,CAACI,GAAG,CAAE,aAAY,EAAE;MAC3DC,OAAO,EAAE;QACPC,aAAa,EAAG,UAASJ,KAAM;MACjC;IACF,CAAC,CAAC;IACF,OAAOC,GAAG,CAACI,IAAI,CAACA,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;EACxC;AACF,CAAC;AAED,OAAO,MAAME,eAAe,GAAG,MAAAA,CAC7BR,KAAoB,EACpBS,SAAiB,KACd;EACH,IAAI;IACF,MAAMR,GAAG,GAAG,MAAMH,uBAAuB,CAACY,IAAI,CAC3C,mBAAkB,EACnB;MACED,SAAS,EAAEA;IACb,CAAC,EACD;MACEN,OAAO,EAAE;QACPC,aAAa,EAAG,UAASJ,KAAM;MACjC;IACF,CACF,CAAC;IACD,OAAOC,GAAG,CAACI,IAAI,CAACA,IAAI,CAACM,MAAM;EAC7B,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;EAClC;AACF,CAAC;AAED,OAAO,MAAMM,cAAc,GAAG,MAAAA,CAC5BZ,KAAoB,EACpBa,SAA6B,KAC1B;EACH,IAAI;IACF,MAAMZ,GAAG,GAAG,MAAMH,uBAAuB,CAACI,GAAG,CAC1C,sBAAqBW,SAAU,EAAC,EACjC;MACEV,OAAO,EAAE;QACPC,aAAa,EAAG,UAASJ,KAAM;MACjC;IACF,CACF,CAAC;IACD,OAAOC,GAAG,CAACI,IAAI,CAACA,IAAI,CAACS,cAAc;EACrC,CAAC,CAAC,OAAOR,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;EACrC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}