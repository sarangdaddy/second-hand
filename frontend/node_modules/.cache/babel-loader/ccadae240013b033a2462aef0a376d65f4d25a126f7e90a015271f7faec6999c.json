{"ast":null,"code":"var _jsxFileName = \"/Users/sarang_daddy/Documents/second-hand/frontend/src/pages/Chat/index.tsx\",\n  _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { CHATROOM } from '../../constants/routeUrl';\nimport { ACCESS_TOKEN } from '../../constants/login';\nimport { getRoomsList } from '../../api/chat';\nimport * as S from './styles';\nimport NavBarTitle from '../../components/NavBarTitle';\n\n// TODO : 채팅 페이지 꾸미기\n// TODO : 채팅방 목록 받아오기에서 판매자 이름도 필요함\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  var _filteredMyWatchList;\n  const navigate = useNavigate();\n  const accessToken = localStorage.getItem(ACCESS_TOKEN);\n  const [myChatRoomList, setMyChatRoomList] = useState([]);\n  const isResultEmpty = (myChatRoomList === null || myChatRoomList === void 0 ? void 0 : myChatRoomList.length) === 0;\n  const checkChatRooms = async () => {\n    const roomsList = await getRoomsList(accessToken);\n    setMyChatRoomList(roomsList);\n  };\n  const enterChatRoom = (roomId, productId) => {\n    sessionStorage.setItem('curRoomId', roomId);\n    sessionStorage.setItem('curProductsId', productId);\n    navigate(`${CHATROOM}/${roomId}`);\n  };\n  useEffect(() => {\n    checkChatRooms();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBarTitle, {\n      type: \"high\",\n      centerTitle: \"\\uCC44\\uD305\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), !isResultEmpty ? /*#__PURE__*/_jsxDEV(S.ItemsContainer, {\n      children: (_filteredMyWatchList = filteredMyWatchList) === null || _filteredMyWatchList === void 0 ? void 0 : _filteredMyWatchList.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleItemClick(item.productId),\n          children: /*#__PURE__*/_jsxDEV(SecondHandItem, {\n            title: item.title,\n            updatedAt: item.updatedAt,\n            salesStatus: item.salesStatus,\n            price: item.price,\n            location: item.location,\n            chatRoomCount: item.chatRoomCount,\n            watchListCount: item.watchListCount,\n            isWatchlistChecked: item.isWatchlistChecked,\n            productMainImgUrl: item.productMainImgUrl,\n            isSetEditOption: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)\n        }, item.productId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(S.Empty, {\n      children: \"\\uAD00\\uC2EC \\uC0C1\\uD488\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: myChatRoomList.map(room => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => enterChatRoom(room.roomId, room.productId),\n        children: [\"\\uC81C\\uD488 \\uC544\\uC774\\uB514 : \", room.productId, \" \\uBC29 \\uBC88\\uD638 : \", room.roomId]\n      }, room.roomId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ChatPage, \"GqW/N5nMQ9aFas4lvkItUm/fo8Y=\", false, function () {\n  return [useNavigate];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["useNavigate","useEffect","useState","CHATROOM","ACCESS_TOKEN","getRoomsList","S","NavBarTitle","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatPage","_s","_filteredMyWatchList","navigate","accessToken","localStorage","getItem","myChatRoomList","setMyChatRoomList","isResultEmpty","length","checkChatRooms","roomsList","enterChatRoom","roomId","productId","sessionStorage","setItem","children","type","centerTitle","fileName","_jsxFileName","lineNumber","columnNumber","ItemsContainer","filteredMyWatchList","map","item","onClick","handleItemClick","SecondHandItem","title","updatedAt","salesStatus","price","location","chatRoomCount","watchListCount","isWatchlistChecked","productMainImgUrl","isSetEditOption","Empty","room","_c","$RefreshReg$"],"sources":["/Users/sarang_daddy/Documents/second-hand/frontend/src/pages/Chat/index.tsx"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport { CHATROOM } from '../../constants/routeUrl';\nimport { ACCESS_TOKEN } from '../../constants/login';\nimport { getRoomsList } from '../../api/chat';\nimport { Room } from '../../constants/types';\n\nimport * as S from './styles';\nimport NavBarTitle from '../../components/NavBarTitle';\n\n// TODO : 채팅 페이지 꾸미기\n// TODO : 채팅방 목록 받아오기에서 판매자 이름도 필요함\n\nconst ChatPage = () => {\n  const navigate = useNavigate();\n  const accessToken = localStorage.getItem(ACCESS_TOKEN);\n\n  const [myChatRoomList, setMyChatRoomList] = useState<Room[]>([]);\n  const isResultEmpty: boolean = myChatRoomList?.length === 0;\n\n  const checkChatRooms = async () => {\n    const roomsList = await getRoomsList(accessToken);\n    setMyChatRoomList(roomsList);\n  };\n\n  const enterChatRoom = (roomId: string, productId: string) => {\n    sessionStorage.setItem('curRoomId', roomId);\n    sessionStorage.setItem('curProductsId', productId);\n    navigate(`${CHATROOM}/${roomId}`);\n  };\n\n  useEffect(() => {\n    checkChatRooms();\n  }, []);\n\n  return (\n    <>\n      <NavBarTitle type=\"high\" centerTitle=\"채팅\" />\n      {!isResultEmpty ? (\n        <S.ItemsContainer>\n          {filteredMyWatchList?.map((item: Item) => {\n            return (\n              <li\n                key={item.productId}\n                onClick={() => handleItemClick(item.productId)}\n              >\n                <SecondHandItem\n                  title={item.title}\n                  updatedAt={item.updatedAt}\n                  salesStatus={item.salesStatus}\n                  price={item.price}\n                  location={item.location}\n                  chatRoomCount={item.chatRoomCount}\n                  watchListCount={item.watchListCount}\n                  isWatchlistChecked={item.isWatchlistChecked}\n                  productMainImgUrl={item.productMainImgUrl}\n                  isSetEditOption={false}\n                />\n              </li>\n            );\n          })}\n        </S.ItemsContainer>\n      ) : (\n        <S.Empty>관심 상품이 없습니다.</S.Empty>\n      )}\n      <ul>\n        {myChatRoomList.map((room) => (\n          <li\n            key={room.roomId}\n            onClick={() => enterChatRoom(room.roomId, room.productId)}\n          >\n            제품 아이디 : {room.productId} 방 번호 : {room.roomId}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ChatPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}