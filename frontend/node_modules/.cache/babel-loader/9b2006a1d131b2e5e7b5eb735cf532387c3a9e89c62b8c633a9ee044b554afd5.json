{"ast":null,"code":"var _jsxFileName = \"/Users/sarang_daddy/Documents/second-hand/frontend/src/pages/Chat/index.tsx\",\n  _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { CHATROOM } from '../../constants/routeUrl';\nimport { ACCESS_TOKEN } from '../../constants/login';\nimport { getRoomsList } from '../../api/chat';\n\n// TODO : 채팅 페이지 꾸미기\n// TODO : 채팅방 목록 받아오기에서 판매자 이름도 필요함\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  const accessToken = localStorage.getItem(ACCESS_TOKEN);\n  const navigate = useNavigate();\n  const [myChatRoomList, setMyChatRoomList] = useState([]);\n  const checkChatRooms = async () => {\n    try {\n      const roomsList = await getRoomsList(accessToken);\n      setMyChatRoomList(roomsList);\n    } catch (error) {\n      console.error('방 리스트 불러오기 에러:', error);\n    }\n  };\n  const enterChatRoom = (roomId, productId) => {\n    sessionStorage.setItem('curRoomId', roomId);\n    sessionStorage.setItem('curProductsId', productId);\n    navigate(`${CHATROOM}/${roomId}`);\n  };\n  useEffect(() => {\n    checkChatRooms();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uCC44\\uD305 \\uC774\\uB2F9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: myChatRoomList.map(room => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => enterChatRoom(room.roomId, room.productId),\n        children: [\"\\uC81C\\uD488 \\uC544\\uC774\\uB514 : \", room.productId, \" \\uBC29 \\uBC88\\uD638 : \", room.roomId]\n      }, room.roomId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ChatPage, \"GqW/N5nMQ9aFas4lvkItUm/fo8Y=\", false, function () {\n  return [useNavigate];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["useNavigate","useEffect","useState","CHATROOM","ACCESS_TOKEN","getRoomsList","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatPage","_s","accessToken","localStorage","getItem","navigate","myChatRoomList","setMyChatRoomList","checkChatRooms","roomsList","error","console","enterChatRoom","roomId","productId","sessionStorage","setItem","children","fileName","_jsxFileName","lineNumber","columnNumber","map","room","onClick","_c","$RefreshReg$"],"sources":["/Users/sarang_daddy/Documents/second-hand/frontend/src/pages/Chat/index.tsx"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport { CHATROOM } from '../../constants/routeUrl';\nimport { ACCESS_TOKEN } from '../../constants/login';\nimport { getRoomsList } from '../../api/chat';\n\nimport * as S from './styles';\n\n// TODO : 채팅 페이지 꾸미기\n// TODO : 채팅방 목록 받아오기에서 판매자 이름도 필요함\n\ninterface Room {\n  roomId: string;\n  productId: string;\n  sellerId: string;\n  buyerId: string;\n}\n\nconst ChatPage = () => {\n  const accessToken = localStorage.getItem(ACCESS_TOKEN);\n  const navigate = useNavigate();\n\n  const [myChatRoomList, setMyChatRoomList] = useState<Room[]>([]);\n\n  const checkChatRooms = async () => {\n    try {\n      const roomsList = await getRoomsList(accessToken);\n      setMyChatRoomList(roomsList);\n    } catch (error) {\n      console.error('방 리스트 불러오기 에러:', error);\n    }\n  };\n\n  const enterChatRoom = (roomId: string, productId: string) => {\n    sessionStorage.setItem('curRoomId', roomId);\n    sessionStorage.setItem('curProductsId', productId);\n    navigate(`${CHATROOM}/${roomId}`);\n  };\n\n  useEffect(() => {\n    checkChatRooms();\n  }, []);\n\n  return (\n    <>\n      <h1>채팅 이당</h1>\n      <ul>\n        {myChatRoomList.map((room) => (\n          <li\n            key={room.roomId}\n            onClick={() => enterChatRoom(room.roomId, room.productId)}\n          >\n            제품 아이디 : {room.productId} 방 번호 : {room.roomId}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ChatPage;\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,YAAY,QAAQ,uBAAuB;AACpD,SAASC,YAAY,QAAQ,gBAAgB;;AAI7C;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AASA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAACV,YAAY,CAAC;EACtD,MAAMW,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAS,EAAE,CAAC;EAEhE,MAAMgB,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,SAAS,GAAG,MAAMd,YAAY,CAACO,WAAW,CAAC;MACjDK,iBAAiB,CAACE,SAAS,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACxC;EACF,CAAC;EAED,MAAME,aAAa,GAAGA,CAACC,MAAc,EAAEC,SAAiB,KAAK;IAC3DC,cAAc,CAACC,OAAO,CAAC,WAAW,EAAEH,MAAM,CAAC;IAC3CE,cAAc,CAACC,OAAO,CAAC,eAAe,EAAEF,SAAS,CAAC;IAClDT,QAAQ,CAAE,GAAEZ,QAAS,IAAGoB,MAAO,EAAC,CAAC;EACnC,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACdiB,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdxB,OAAA;MAAAoB,QAAA,EACGX,cAAc,CAACgB,GAAG,CAAEC,IAAI,iBACvB1B,OAAA;QAEE2B,OAAO,EAAEA,CAAA,KAAMZ,aAAa,CAACW,IAAI,CAACV,MAAM,EAAEU,IAAI,CAACT,SAAS,CAAE;QAAAG,QAAA,GAC3D,oCACU,EAACM,IAAI,CAACT,SAAS,EAAC,yBAAQ,EAACS,IAAI,CAACV,MAAM;MAAA,GAHxCU,IAAI,CAACV,MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAId,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA,eACL,CAAC;AAEP,CAAC;AAACpB,EAAA,CAxCID,QAAQ;EAAA,QAEKV,WAAW;AAAA;AAAAmC,EAAA,GAFxBzB,QAAQ;AA0Cd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}