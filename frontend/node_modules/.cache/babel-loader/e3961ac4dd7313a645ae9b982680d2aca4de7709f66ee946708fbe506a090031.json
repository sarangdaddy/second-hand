{"ast":null,"code":"var _jsxFileName = \"/Users/sarang_daddy/Documents/second-hand/frontend/src/components/UploadLocation/index.tsx\",\n  _s = $RefreshSig$();\nimport { useContext, useState, useEffect } from 'react';\nimport { postSalesItemContext } from '../../context/SalesItem/useContext';\nimport { useAuthContext } from '../../context/Auth';\nimport * as S from './styles';\nimport Dropdown from '../Dropdown';\nimport Icon from '../Icon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UploadLocation = () => {\n  _s();\n  const userData = useAuthContext();\n  const isLoggedIn = userData.isLoggedIn;\n  const [curLocationData, setCurLocationData] = useState([]);\n  const {\n    setPostObject\n  } = useContext(postSalesItemContext);\n  const fetchUserData = () => {\n    if (isLoggedIn) {\n      const userLocationData = userData.userInfo.locationDatas;\n      setCurLocationData(userLocationData);\n    }\n  };\n  useEffect(() => {\n    const curLocation = curLocationData.find(locationInfo => locationInfo.mainLocationState === true);\n    if (curLocation) {\n      const curLocationId = curLocation.locationId;\n      setPostObject(prevPostObject => ({\n        ...prevPostObject,\n        locationId: curLocationId\n      }));\n    }\n  }, [curLocationData]);\n  useEffect(() => {\n    fetchUserData();\n  }, [userData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(S.UploadLocationContainer, {\n      children: /*#__PURE__*/_jsxDEV(S.Menu, {\n        children: [/*#__PURE__*/_jsxDEV(S.Left, {\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"slider\",\n            width: \"20\",\n            height: \"18\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            options: curLocationData,\n            isSetLocationOption: isLoggedIn,\n            isReverse: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(S.Right, {\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"keyboard\",\n            width: \"20\",\n            height: \"18\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(UploadLocation, \"57wy5zQeKDS5CWtwYD/SovFprXM=\", false, function () {\n  return [useAuthContext];\n});\n_c = UploadLocation;\nexport default UploadLocation;\nvar _c;\n$RefreshReg$(_c, \"UploadLocation\");","map":{"version":3,"names":["useContext","useState","useEffect","postSalesItemContext","useAuthContext","S","Dropdown","Icon","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadLocation","_s","userData","isLoggedIn","curLocationData","setCurLocationData","setPostObject","fetchUserData","userLocationData","userInfo","locationDatas","curLocation","find","locationInfo","mainLocationState","curLocationId","locationId","prevPostObject","children","UploadLocationContainer","Menu","Left","name","width","height","fileName","_jsxFileName","lineNumber","columnNumber","options","isSetLocationOption","isReverse","Right","_c","$RefreshReg$"],"sources":["/Users/sarang_daddy/Documents/second-hand/frontend/src/components/UploadLocation/index.tsx"],"sourcesContent":["import { useContext, useState, useEffect } from 'react';\n\nimport {\n  postSalesItemContext,\n  PostObjectType,\n} from '../../context/SalesItem/useContext';\nimport { useAuthContext } from '../../context/Auth';\n\nimport * as S from './styles';\nimport Dropdown from '../Dropdown';\nimport Icon from '../Icon';\ninterface Location {\n  locationId: number;\n  locationDetails: string;\n  locationShortening: string;\n  mainLocationState: boolean;\n}\n\nconst UploadLocation = () => {\n  const userData = useAuthContext();\n  const isLoggedIn = userData.isLoggedIn;\n  const [curLocationData, setCurLocationData] = useState<Location[]>([]);\n  const { setPostObject } = useContext(postSalesItemContext);\n\n  const fetchUserData = () => {\n    if (isLoggedIn) {\n      const userLocationData = userData.userInfo.locationDatas;\n      setCurLocationData(userLocationData);\n    }\n  };\n\n  useEffect(() => {\n    const curLocation = curLocationData.find(\n      (locationInfo) => locationInfo.mainLocationState === true,\n    );\n\n    if (curLocation) {\n      const curLocationId = curLocation.locationId;\n      setPostObject((prevPostObject: PostObjectType) => ({\n        ...prevPostObject,\n        locationId: curLocationId,\n      }));\n    }\n  }, [curLocationData]);\n\n  useEffect(() => {\n    fetchUserData();\n  }, [userData]);\n\n  return (\n    <>\n      <S.UploadLocationContainer>\n        <S.Menu>\n          <S.Left>\n            <Icon name=\"slider\" width=\"20\" height=\"18\" />\n            <Dropdown\n              options={curLocationData}\n              isSetLocationOption={isLoggedIn}\n              isReverse={true}\n            />\n          </S.Left>\n          <S.Right>\n            <Icon name=\"keyboard\" width=\"20\" height=\"18\" />\n          </S.Right>\n        </S.Menu>\n      </S.UploadLocationContainer>\n    </>\n  );\n};\n\nexport default UploadLocation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}