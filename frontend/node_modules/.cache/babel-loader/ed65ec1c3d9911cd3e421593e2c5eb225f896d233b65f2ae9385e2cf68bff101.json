{"ast":null,"code":"var _jsxFileName = \"/Users/sarang_daddy/Documents/second-hand/frontend/src/components/UploadTitle/index.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport useAsync from '../../hooks/useAsync';\nimport { getCategory } from '../../api/category';\nimport { postSalesItemContext } from '../../context/SalesItem/useContext';\nimport * as S from './styles';\nimport Icon from '../Icon';\nimport { CATEGORY_SET } from '../../constants/routeUrl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UploadTitle = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    data\n  } = useAsync(getCategory);\n  const categoryList = data === null || data === void 0 ? void 0 : data.data;\n  const {\n    postObject,\n    setPostObject\n  } = useContext(postSalesItemContext);\n  const initialPostObject = postObject;\n  const [randomCategories, setRandomCategories] = useState([]);\n  const [hasInputValue, setHasInputValue] = useState();\n  const [selectedCategoryId, setSelectedCategoryId] = useState(null);\n  useEffect(() => {\n    if (hasInputValue !== '' && categoryList !== null) {\n      const chosenCategory = categoryList === null || categoryList === void 0 ? void 0 : categoryList.find(category => category.categoryId === selectedCategoryId);\n      const otherCategories = categoryList === null || categoryList === void 0 ? void 0 : categoryList.filter(category => category.categoryId !== selectedCategoryId);\n      const shuffledCategories = otherCategories === null || otherCategories === void 0 ? void 0 : otherCategories.sort(() => 0.5 - Math.random());\n      const randomCategories = shuffledCategories === null || shuffledCategories === void 0 ? void 0 : shuffledCategories.slice(0, 3);\n      if (chosenCategory) {\n        setRandomCategories([chosenCategory, ...randomCategories]);\n      } else {\n        setRandomCategories(randomCategories);\n      }\n    } else {\n      setPostObject(prevPostObject => ({\n        ...prevPostObject,\n        title: null,\n        categoryId: null\n      }));\n    }\n  }, [hasInputValue, categoryList]);\n  const handleTitleInput = event => {\n    const inputValue = event.target.value;\n    const hasValue = inputValue !== '';\n    if (hasValue) {\n      setHasInputValue(inputValue);\n    } else {\n      setHasInputValue('');\n      setRandomCategories([]);\n      setSelectedCategoryId(null);\n    }\n    setPostObject(prevPostObject => ({\n      ...prevPostObject,\n      title: inputValue\n    }));\n  };\n  const handleCategoryChoice = categoryId => {\n    setSelectedCategoryId(categoryId);\n    setPostObject(prevPostObject => ({\n      ...prevPostObject,\n      categoryId: categoryId\n    }));\n  };\n  const handleAddClick = () => {\n    navigate(CATEGORY_SET);\n  };\n  useEffect(() => {\n    if (postObject.title) {\n      setHasInputValue(postObject.title);\n    }\n    if (postObject.categoryId) {\n      setSelectedCategoryId(postObject.categoryId);\n    }\n  }, [postObject]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(S.UploadTitle, {\n      children: [/*#__PURE__*/_jsxDEV(S.Title, {\n        children: /*#__PURE__*/_jsxDEV(S.inputTitle, {\n          placeholder: \"\\uAE00\\uC81C\\uBAA9\",\n          type: \"text\",\n          onChange: handleTitleInput,\n          maxLength: 30,\n          value: hasInputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), hasInputValue && /*#__PURE__*/_jsxDEV(S.Contents, {\n        children: [/*#__PURE__*/_jsxDEV(S.Categories, {\n          children: randomCategories === null || randomCategories === void 0 ? void 0 : randomCategories.map(category => /*#__PURE__*/_jsxDEV(S.Category, {\n            onClick: () => handleCategoryChoice(category.categoryId),\n            isActive: selectedCategoryId === category.categoryId,\n            children: category.title\n          }, category.categoryId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(S.MoreIcon, {\n          onClick: handleAddClick,\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"chevronRight\",\n            height: \"11\",\n            width: \"22\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(UploadTitle, \"nbzFJRM0vcKHsy9YNHRH4Y4gjnE=\", false, function () {\n  return [useNavigate, useAsync];\n});\n_c = UploadTitle;\nexport default UploadTitle;\nvar _c;\n$RefreshReg$(_c, \"UploadTitle\");","map":{"version":3,"names":["useEffect","useState","useContext","useNavigate","useAsync","getCategory","postSalesItemContext","S","Icon","CATEGORY_SET","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadTitle","_s","navigate","data","categoryList","postObject","setPostObject","initialPostObject","randomCategories","setRandomCategories","hasInputValue","setHasInputValue","selectedCategoryId","setSelectedCategoryId","chosenCategory","find","category","categoryId","otherCategories","filter","shuffledCategories","sort","Math","random","slice","prevPostObject","title","handleTitleInput","event","inputValue","target","value","hasValue","handleCategoryChoice","handleAddClick","children","Title","inputTitle","placeholder","type","onChange","maxLength","fileName","_jsxFileName","lineNumber","columnNumber","Contents","Categories","map","Category","onClick","isActive","MoreIcon","name","height","width","_c","$RefreshReg$"],"sources":["/Users/sarang_daddy/Documents/second-hand/frontend/src/components/UploadTitle/index.tsx"],"sourcesContent":["import { useEffect, useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport useAsync from '../../hooks/useAsync';\nimport { getCategory } from '../../api/category';\nimport {\n  postSalesItemContext,\n  PostObjectType,\n} from '../../context/SalesItem/useContext';\n\nimport * as S from './styles';\nimport Icon from '../Icon';\nimport { CATEGORY_SET } from '../../constants/routeUrl';\n\ninterface Category {\n  categoryId: number;\n  title: string;\n  categoryImgUrl: string;\n}\n\nconst UploadTitle = () => {\n  const navigate = useNavigate();\n  const { data } = useAsync(getCategory);\n  const categoryList: Category[] = data?.data;\n\n  const { postObject, setPostObject } = useContext(postSalesItemContext);\n\n  const initialPostObject = postObject;\n\n  const [randomCategories, setRandomCategories] = useState<Category[]>([]);\n  const [hasInputValue, setHasInputValue] = useState<string>();\n  const [selectedCategoryId, setSelectedCategoryId] = useState<number | null>(\n    null,\n  );\n\n  useEffect(() => {\n    if (hasInputValue !== '' && categoryList !== null) {\n      const chosenCategory = categoryList?.find(\n        (category) => category.categoryId === selectedCategoryId,\n      );\n      const otherCategories = categoryList?.filter(\n        (category) => category.categoryId !== selectedCategoryId,\n      );\n      const shuffledCategories = otherCategories?.sort(\n        () => 0.5 - Math.random(),\n      );\n      const randomCategories = shuffledCategories?.slice(0, 3);\n      if (chosenCategory) {\n        setRandomCategories([chosenCategory, ...randomCategories]);\n      } else {\n        setRandomCategories(randomCategories);\n      }\n    } else {\n      setPostObject((prevPostObject: PostObjectType) => ({\n        ...prevPostObject,\n        title: null,\n        categoryId: null,\n      }));\n    }\n  }, [hasInputValue, categoryList]);\n\n  const handleTitleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const inputValue = event.target.value;\n    const hasValue = inputValue !== '';\n\n    if (hasValue) {\n      setHasInputValue(inputValue);\n    } else {\n      setHasInputValue('');\n      setRandomCategories([]);\n      setSelectedCategoryId(null);\n    }\n\n    setPostObject((prevPostObject: PostObjectType) => ({\n      ...prevPostObject,\n      title: inputValue,\n    }));\n  };\n\n  const handleCategoryChoice = (categoryId: number) => {\n    setSelectedCategoryId(categoryId);\n\n    setPostObject((prevPostObject: PostObjectType) => ({\n      ...prevPostObject,\n      categoryId: categoryId,\n    }));\n  };\n\n  const handleAddClick = () => {\n    navigate(CATEGORY_SET);\n  };\n\n  useEffect(() => {\n    if (postObject.title) {\n      setHasInputValue(postObject.title);\n    }\n    if (postObject.categoryId) {\n      setSelectedCategoryId(postObject.categoryId);\n    }\n  }, [postObject]);\n\n  return (\n    <>\n      <S.UploadTitle>\n        <S.Title>\n          <S.inputTitle\n            placeholder=\"글제목\"\n            type=\"text\"\n            onChange={handleTitleInput}\n            maxLength={30}\n            value={hasInputValue}\n          />\n        </S.Title>\n        {hasInputValue && (\n          <S.Contents>\n            <S.Categories>\n              {randomCategories?.map((category) => (\n                <S.Category\n                  key={category.categoryId}\n                  onClick={() => handleCategoryChoice(category.categoryId)}\n                  isActive={selectedCategoryId === category.categoryId}\n                >\n                  {category.title}\n                </S.Category>\n              ))}\n            </S.Categories>\n            <S.MoreIcon onClick={handleAddClick}>\n              <Icon name=\"chevronRight\" height=\"11\" width=\"22\" />\n            </S.MoreIcon>\n          </S.Contents>\n        )}\n      </S.UploadTitle>\n    </>\n  );\n};\n\nexport default UploadTitle;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}