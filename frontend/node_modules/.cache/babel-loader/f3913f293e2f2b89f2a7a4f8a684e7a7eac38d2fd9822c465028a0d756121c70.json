{"ast":null,"code":"var _jsxFileName = \"/Users/sarang_daddy/Documents/second-hand/frontend/src/components/Dropdown/index.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ACCESS_TOKEN } from '../../constants/login';\nimport { useAuthContext } from '../../context/Auth';\nimport { patchMembersLocation } from '../../api/member';\nimport * as S from './styles';\nimport DropdownPanel from './DropdownPanel';\nimport Icon from '../Icon';\nimport { LOCATION } from '../../constants/routeUrl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dropdown = ({\n  options,\n  isSetLocationOption,\n  isReverse\n}) => {\n  _s();\n  var _options$find;\n  const navigate = useNavigate();\n  const accessToken = localStorage.getItem(ACCESS_TOKEN);\n  const {\n    handleUpdateUserInfo\n  } = useAuthContext();\n  const [isOpen, setIsOpen] = useState(false);\n  const mainLocation = ((_options$find = options.find(locationInfo => locationInfo.mainLocationState)) === null || _options$find === void 0 ? void 0 : _options$find.locationShortening) || undefined;\n  const handleFetchUserData = async index => {\n    const mainLocationIndex = options.findIndex(location => location.mainLocationState === true);\n    const locationIdList = options.map(location => location.locationId);\n    if (mainLocationIndex !== index) locationIdList.reverse();\n    await patchMembersLocation(accessToken, locationIdList);\n    handleUpdateUserInfo();\n    setIsOpen(false);\n  };\n  const toggleDropdown = () => {\n    setIsOpen(prevIsOpen => !prevIsOpen);\n  };\n  const handleChangeLocationClick = () => {\n    setIsOpen(false);\n    navigate(LOCATION);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isOpen === true && /*#__PURE__*/_jsxDEV(S.DropdownWrapper, {\n      onClick: toggleDropdown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(S.DropdownContainer, {\n      children: [/*#__PURE__*/_jsxDEV(S.DropdownHeader, {\n        onClick: toggleDropdown,\n        children: [/*#__PURE__*/_jsxDEV(S.SelectedOption, {\n          children: mainLocation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), isReverse === false && /*#__PURE__*/_jsxDEV(Icon, {\n          name: 'chevronDown',\n          width: \"17\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(S.PanelContainer, {\n        isReverse: isReverse,\n        children: [options.map((option, index) => /*#__PURE__*/_jsxDEV(DropdownPanel, {\n          option: option.locationShortening,\n          mainLocationState: option.mainLocationState,\n          onClickNonOption: options.length === 1 ? undefined : () => handleFetchUserData(index)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)), isSetLocationOption && /*#__PURE__*/_jsxDEV(DropdownPanel, {\n          option: '내 동네 변경하기',\n          onClickOption: handleChangeLocationClick,\n          isLastPanel: true\n        }, 2, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Dropdown, \"3MsL/y9NLrWLqTDeIDQXj+6CdOI=\", false, function () {\n  return [useNavigate, useAuthContext];\n});\n_c = Dropdown;\nexport default Dropdown;\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["useState","useNavigate","ACCESS_TOKEN","useAuthContext","patchMembersLocation","S","DropdownPanel","Icon","LOCATION","jsxDEV","_jsxDEV","Fragment","_Fragment","Dropdown","options","isSetLocationOption","isReverse","_s","_options$find","navigate","accessToken","localStorage","getItem","handleUpdateUserInfo","isOpen","setIsOpen","mainLocation","find","locationInfo","mainLocationState","locationShortening","undefined","handleFetchUserData","index","mainLocationIndex","findIndex","location","locationIdList","map","locationId","reverse","toggleDropdown","prevIsOpen","handleChangeLocationClick","children","DropdownWrapper","onClick","fileName","_jsxFileName","lineNumber","columnNumber","DropdownContainer","DropdownHeader","SelectedOption","name","width","PanelContainer","option","onClickNonOption","length","onClickOption","isLastPanel","_c","$RefreshReg$"],"sources":["/Users/sarang_daddy/Documents/second-hand/frontend/src/components/Dropdown/index.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { ACCESS_TOKEN } from '../../constants/login';\nimport { useAuthContext } from '../../context/Auth';\nimport { patchMembersLocation } from '../../api/member';\n\nimport * as S from './styles';\nimport DropdownPanel from './DropdownPanel';\nimport Icon from '../Icon';\nimport { LOCATION } from '../../constants/routeUrl';\n\ninterface Location {\n  locationId: number;\n  locationDetails: string;\n  locationShortening: string;\n  mainLocationState: boolean;\n}\n\ninterface DropdownProps {\n  options: Location[];\n  isSetLocationOption: boolean;\n  isReverse?: boolean;\n}\n\nconst Dropdown = ({\n  options,\n  isSetLocationOption,\n  isReverse,\n}: DropdownProps) => {\n  const navigate = useNavigate();\n  const accessToken = localStorage.getItem(ACCESS_TOKEN);\n  const { handleUpdateUserInfo } = useAuthContext();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const mainLocation =\n    options.find((locationInfo) => locationInfo.mainLocationState)\n      ?.locationShortening || undefined;\n\n  const handleFetchUserData = async (index: number) => {\n    const mainLocationIndex = options.findIndex(\n      (location) => location.mainLocationState === true,\n    );\n    const locationIdList = options.map((location) => location.locationId);\n\n    if (mainLocationIndex !== index) locationIdList.reverse();\n\n    await patchMembersLocation(accessToken, locationIdList);\n    handleUpdateUserInfo();\n    setIsOpen(false);\n  };\n\n  const toggleDropdown = () => {\n    setIsOpen((prevIsOpen) => !prevIsOpen);\n  };\n\n  const handleChangeLocationClick = () => {\n    setIsOpen(false);\n    navigate(LOCATION);\n  };\n\n  return (\n    <>\n      {isOpen === true && <S.DropdownWrapper onClick={toggleDropdown} />}\n      <S.DropdownContainer>\n        <S.DropdownHeader onClick={toggleDropdown}>\n          <S.SelectedOption>{mainLocation}</S.SelectedOption>\n          {isReverse === false && <Icon name={'chevronDown'} width=\"17\" />}\n        </S.DropdownHeader>\n        {isOpen && (\n          <S.PanelContainer isReverse={isReverse}>\n            {options.map((option, index) => (\n              <DropdownPanel\n                key={index}\n                option={option.locationShortening}\n                mainLocationState={option.mainLocationState}\n                onClickNonOption={\n                  options.length === 1\n                    ? undefined\n                    : () => handleFetchUserData(index)\n                }\n              />\n            ))}\n            {isSetLocationOption && (\n              <DropdownPanel\n                key={2}\n                option={'내 동네 변경하기'}\n                onClickOption={handleChangeLocationClick}\n                isLastPanel={true}\n              />\n            )}\n          </S.PanelContainer>\n        )}\n      </S.DropdownContainer>\n    </>\n  );\n};\n\nexport default Dropdown;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}