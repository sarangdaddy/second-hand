{"ast":null,"code":"import { axiosInstanceWithBearer } from './axios';\n\n// http://localhost:8080/api/products?locationId=1&categoryId=1&page=20 물품 데이터 요청 예시\n\nexport const getProducts = async (token, locationId, categoryId) => {\n  let url = `/api/products?`;\n  if (locationId !== undefined) {\n    url += `locationId=${locationId}`;\n    if (categoryId !== undefined) {\n      url += '&';\n    }\n  }\n  if (categoryId !== undefined) {\n    url += `categoryId=${categoryId}`;\n  }\n\n  // const res = await axiosInstanceWithoutBearer.get(url);\n  // return res;\n\n  const res = await axiosInstanceWithBearer.get(url, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return res;\n};\nexport const postProducts = async (formData, token) => {\n  try {\n    const res = await axiosInstanceWithBearer.post(`/api/products`, formData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    if (res.status === 200) {\n      console.log('POST 요청이 성공적으로 완료되었습니다.');\n    } else {\n      console.log('POST 요청이 실패하였습니다.');\n    }\n  } catch (error) {\n    console.log('POST 요청 중 오류가 발생하였습니다.', error);\n  }\n};\nexport const getProductsDetail = async (productsId, token) => {\n  if (!productsId) {\n    throw new Error('productsId is undefined');\n  }\n  const res = await axiosInstanceWithBearer.get(`/api/products/${productsId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return res;\n};\nexport const getMyProducts = async token => {\n  const res = await axiosInstanceWithBearer.get(`/api/products/myProducts`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return res;\n};","map":{"version":3,"names":["axiosInstanceWithBearer","getProducts","token","locationId","categoryId","url","undefined","res","get","headers","Authorization","postProducts","formData","post","status","console","log","error","getProductsDetail","productsId","Error","getMyProducts"],"sources":["/Users/sarang_daddy/Documents/second-hand/frontend/src/api/product.ts"],"sourcesContent":["import { axiosInstanceWithoutBearer, axiosInstanceWithBearer } from './axios';\n\n// http://localhost:8080/api/products?locationId=1&categoryId=1&page=20 물품 데이터 요청 예시\n\nexport const getProducts = async (\n  token: string | null,\n  locationId: number | undefined,\n  categoryId: string | undefined,\n) => {\n  let url = `/api/products?`;\n\n  if (locationId !== undefined) {\n    url += `locationId=${locationId}`;\n    if (categoryId !== undefined) {\n      url += '&';\n    }\n  }\n  if (categoryId !== undefined) {\n    url += `categoryId=${categoryId}`;\n  }\n\n  // const res = await axiosInstanceWithoutBearer.get(url);\n  // return res;\n\n  const res = await axiosInstanceWithBearer.get(url, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n  return res;\n};\n\nexport const postProducts = async (\n  formData: FormData,\n  token: string | null,\n) => {\n  try {\n    const res = await axiosInstanceWithBearer.post(`/api/products`, formData, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n\n    if (res.status === 200) {\n      console.log('POST 요청이 성공적으로 완료되었습니다.');\n    } else {\n      console.log('POST 요청이 실패하였습니다.');\n    }\n  } catch (error) {\n    console.log('POST 요청 중 오류가 발생하였습니다.', error);\n  }\n};\n\nexport const getProductsDetail = async (\n  productsId: string | undefined,\n  token: string | null,\n) => {\n  if (!productsId) {\n    throw new Error('productsId is undefined');\n  }\n\n  const res = await axiosInstanceWithBearer.get(`/api/products/${productsId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n  return res;\n};\n\nexport const getMyProducts = async (token: string | null) => {\n  const res = await axiosInstanceWithBearer.get(`/api/products/myProducts`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n  return res;\n};\n"],"mappings":"AAAA,SAAqCA,uBAAuB,QAAQ,SAAS;;AAE7E;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CACzBC,KAAoB,EACpBC,UAA8B,EAC9BC,UAA8B,KAC3B;EACH,IAAIC,GAAG,GAAI,gBAAe;EAE1B,IAAIF,UAAU,KAAKG,SAAS,EAAE;IAC5BD,GAAG,IAAK,cAAaF,UAAW,EAAC;IACjC,IAAIC,UAAU,KAAKE,SAAS,EAAE;MAC5BD,GAAG,IAAI,GAAG;IACZ;EACF;EACA,IAAID,UAAU,KAAKE,SAAS,EAAE;IAC5BD,GAAG,IAAK,cAAaD,UAAW,EAAC;EACnC;;EAEA;EACA;;EAEA,MAAMG,GAAG,GAAG,MAAMP,uBAAuB,CAACQ,GAAG,CAACH,GAAG,EAAE;IACjDI,OAAO,EAAE;MACPC,aAAa,EAAG,UAASR,KAAM;IACjC;EACF,CAAC,CAAC;EACF,OAAOK,GAAG;AACZ,CAAC;AAED,OAAO,MAAMI,YAAY,GAAG,MAAAA,CAC1BC,QAAkB,EAClBV,KAAoB,KACjB;EACH,IAAI;IACF,MAAMK,GAAG,GAAG,MAAMP,uBAAuB,CAACa,IAAI,CAAE,eAAc,EAAED,QAAQ,EAAE;MACxEH,OAAO,EAAE;QACPC,aAAa,EAAG,UAASR,KAAM;MACjC;IACF,CAAC,CAAC;IAEF,IAAIK,GAAG,CAACO,MAAM,KAAK,GAAG,EAAE;MACtBC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACxC,CAAC,MAAM;MACLD,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAClC;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdF,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEC,KAAK,CAAC;EAC9C;AACF,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAG,MAAAA,CAC/BC,UAA8B,EAC9BjB,KAAoB,KACjB;EACH,IAAI,CAACiB,UAAU,EAAE;IACf,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAEA,MAAMb,GAAG,GAAG,MAAMP,uBAAuB,CAACQ,GAAG,CAAE,iBAAgBW,UAAW,EAAC,EAAE;IAC3EV,OAAO,EAAE;MACPC,aAAa,EAAG,UAASR,KAAM;IACjC;EACF,CAAC,CAAC;EACF,OAAOK,GAAG;AACZ,CAAC;AAED,OAAO,MAAMc,aAAa,GAAG,MAAOnB,KAAoB,IAAK;EAC3D,MAAMK,GAAG,GAAG,MAAMP,uBAAuB,CAACQ,GAAG,CAAE,0BAAyB,EAAE;IACxEC,OAAO,EAAE;MACPC,aAAa,EAAG,UAASR,KAAM;IACjC;EACF,CAAC,CAAC;EACF,OAAOK,GAAG;AACZ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}