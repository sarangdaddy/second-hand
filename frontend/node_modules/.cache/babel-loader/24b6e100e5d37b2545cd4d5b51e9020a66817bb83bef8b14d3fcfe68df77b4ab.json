{"ast":null,"code":"var _jsxFileName = \"/Users/sarang_daddy/Documents/second-hand/frontend/src/components/ChatRoomContents/index.tsx\",\n  _s = $RefreshSig$();\nimport * as S from './styles';\nimport ChatOtherPerson from '../ChatOtherPerson';\nimport ChatMy from '../ChatMy';\nimport { ACCESS_TOKEN } from '../../constants/login';\nimport useAsync from '../../hooks/useAsync';\nimport { getMembers } from '../../api/member';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatRoomContents = ({\n  chatHistory\n}) => {\n  _s();\n  const accessToken = localStorage.getItem(ACCESS_TOKEN);\n  const {\n    data: userData\n  } = useAsync(() => getMembers(accessToken));\n\n  // TODO : 채팅 기능 구현 완료 후 콘솔 지우기\n  console.log('채팅내역 확인', chatHistory);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(S.ContentsContainer, {\n      children: chatHistory === null || chatHistory === void 0 ? void 0 : chatHistory.map((chat, index) =>\n      /*#__PURE__*/\n      // TODO : uuid로 고유 키값 주기\n      _jsxDEV(\"li\", {\n        children: chat.sender === (userData === null || userData === void 0 ? void 0 : userData.data.nickname) ? /*#__PURE__*/_jsxDEV(S.Sent, {\n          children: /*#__PURE__*/_jsxDEV(ChatMy, {\n            message: chat.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(S.Received, {\n          children: /*#__PURE__*/_jsxDEV(ChatOtherPerson, {\n            message: chat.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ChatRoomContents, \"bJSqgJUQltgnG0ncA/GggXwFXjw=\", false, function () {\n  return [useAsync];\n});\n_c = ChatRoomContents;\nexport default ChatRoomContents;\nvar _c;\n$RefreshReg$(_c, \"ChatRoomContents\");","map":{"version":3,"names":["S","ChatOtherPerson","ChatMy","ACCESS_TOKEN","useAsync","getMembers","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatRoomContents","chatHistory","_s","accessToken","localStorage","getItem","data","userData","console","log","children","ContentsContainer","map","chat","index","sender","nickname","Sent","message","fileName","_jsxFileName","lineNumber","columnNumber","Received","_c","$RefreshReg$"],"sources":["/Users/sarang_daddy/Documents/second-hand/frontend/src/components/ChatRoomContents/index.tsx"],"sourcesContent":["import * as S from './styles';\n\nimport ChatOtherPerson from '../ChatOtherPerson';\nimport ChatMy from '../ChatMy';\nimport { ACCESS_TOKEN } from '../../constants/login';\nimport useAsync from '../../hooks/useAsync';\nimport { getMembers } from '../../api/member';\n\ninterface ChatHistoryProps {\n  type: string;\n  sender: string;\n  message: string;\n}\n\ninterface ChatRoomContentsProps {\n  chatHistory: ChatHistoryProps[] | null;\n}\n\nconst ChatRoomContents = ({ chatHistory }: ChatRoomContentsProps) => {\n  const accessToken = localStorage.getItem(ACCESS_TOKEN);\n  const { data: userData } = useAsync(() => getMembers(accessToken));\n\n  // TODO : 채팅 기능 구현 완료 후 콘솔 지우기\n  console.log('채팅내역 확인', chatHistory);\n\n  return (\n    <>\n      <S.ContentsContainer>\n        {chatHistory?.map((chat, index) => (\n          // TODO : uuid로 고유 키값 주기\n          <li key={index}>\n            {chat.sender === userData?.data.nickname ? (\n              <S.Sent>\n                <ChatMy message={chat.message} />\n              </S.Sent>\n            ) : (\n              <S.Received>\n                <ChatOtherPerson message={chat.message} />\n              </S.Received>\n            )}\n          </li>\n        ))}\n      </S.ContentsContainer>\n    </>\n  );\n};\n\nexport default ChatRoomContents;\n"],"mappings":";;AAAA,OAAO,KAAKA,CAAC,MAAM,UAAU;AAE7B,OAAOC,eAAe,MAAM,oBAAoB;AAChD,OAAOC,MAAM,MAAM,WAAW;AAC9B,SAASC,YAAY,QAAQ,uBAAuB;AACpD,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAY9C,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC;AAAmC,CAAC,KAAK;EAAAC,EAAA;EACnE,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAACZ,YAAY,CAAC;EACtD,MAAM;IAAEa,IAAI,EAAEC;EAAS,CAAC,GAAGb,QAAQ,CAAC,MAAMC,UAAU,CAACQ,WAAW,CAAC,CAAC;;EAElE;EACAK,OAAO,CAACC,GAAG,CAAC,SAAS,EAAER,WAAW,CAAC;EAEnC,oBACEJ,OAAA,CAAAE,SAAA;IAAAW,QAAA,eACEb,OAAA,CAACP,CAAC,CAACqB,iBAAiB;MAAAD,QAAA,EACjBT,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEW,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK;MAAA;MAC5B;MACAjB,OAAA;QAAAa,QAAA,EACGG,IAAI,CAACE,MAAM,MAAKR,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAED,IAAI,CAACU,QAAQ,iBACtCnB,OAAA,CAACP,CAAC,CAAC2B,IAAI;UAAAP,QAAA,eACLb,OAAA,CAACL,MAAM;YAAC0B,OAAO,EAAEL,IAAI,CAACK;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CAAC,gBAETzB,OAAA,CAACP,CAAC,CAACiC,QAAQ;UAAAb,QAAA,eACTb,OAAA,CAACN,eAAe;YAAC2B,OAAO,EAAEL,IAAI,CAACK;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC;MACb,GATMR,KAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACiB;EAAC,gBACtB,CAAC;AAEP,CAAC;AAACpB,EAAA,CA3BIF,gBAAgB;EAAA,QAEON,QAAQ;AAAA;AAAA8B,EAAA,GAF/BxB,gBAAgB;AA6BtB,eAAeA,gBAAgB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}