{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useReducer, useEffect } from 'react';\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'LOADING':\n      return {\n        isLoading: true,\n        data: null,\n        error: null\n      };\n    case 'SUCCESS':\n      return {\n        isLoading: false,\n        data: action.data,\n        error: null\n      };\n    case 'ERROR':\n      return {\n        isLoading: false,\n        data: null,\n        error: action.error\n      };\n    default:\n      return state;\n  }\n}\nfunction useAsync(callback, deps = [], skip = false) {\n  _s();\n  const initialState = {\n    isLoading: false,\n    data: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const fetchData = async () => {\n    dispatch({\n      type: 'LOADING'\n    });\n    try {\n      const response = await callback();\n      dispatch({\n        type: 'SUCCESS',\n        data: response.data\n      });\n    } catch (e) {\n      dispatch({\n        type: 'ERROR',\n        error: e\n      });\n    }\n  };\n  useEffect(() => {\n    let isCancelled = false; // 취소 플래그\n\n    const fetchData = async () => {\n      dispatch({\n        type: 'LOADING'\n      });\n      try {\n        const response = await callback();\n        if (!isCancelled) {\n          // 취소되지 않았을 때만 상태 업데이트\n          dispatch({\n            type: 'SUCCESS',\n            data: response.data\n          });\n        }\n      } catch (e) {\n        if (!isCancelled) {\n          // 취소되지 않았을 때만 상태 업데이트\n          dispatch({\n            type: 'ERROR',\n            error: e\n          });\n        }\n      }\n    };\n    if (!skip) {\n      fetchData();\n    }\n    return () => {\n      isCancelled = true; // 클린업 시 취소 플래그 설정\n    };\n  }, deps);\n  const {\n    isLoading,\n    data,\n    error\n  } = state;\n  return {\n    isLoading,\n    data: data,\n    error,\n    refetch: fetchData\n  };\n}\n_s(useAsync, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\nexport default useAsync;","map":{"version":3,"names":["useReducer","useEffect","reducer","state","action","type","isLoading","data","error","useAsync","callback","deps","skip","_s","initialState","dispatch","fetchData","response","e","isCancelled","refetch"],"sources":["/Users/sarang_daddy/Documents/second-hand/frontend/src/hooks/useAsync.ts"],"sourcesContent":["import { useReducer, useEffect, DependencyList } from 'react';\nimport { AxiosResponse, AxiosError } from 'axios';\n\ninterface State<T> {\n  isLoading: boolean;\n  data: T | null;\n  error: AxiosError | null;\n}\n\ntype Action<T> =\n  | { type: 'LOADING' }\n  | { type: 'SUCCESS'; data: T }\n  | { type: 'ERROR'; error: AxiosError };\n\nfunction reducer<T>(state: State<T>, action: Action<T>): State<T> {\n  switch (action.type) {\n    case 'LOADING':\n      return {\n        isLoading: true,\n        data: null,\n        error: null,\n      };\n    case 'SUCCESS':\n      return {\n        isLoading: false,\n        data: action.data,\n        error: null,\n      };\n    case 'ERROR':\n      return {\n        isLoading: false,\n        data: null,\n        error: action.error,\n      };\n    default:\n      return state;\n  }\n}\n\nfunction useAsync<T>(\n  callback: () => Promise<AxiosResponse<T>>,\n  deps: DependencyList = [],\n  skip = false,\n): {\n  isLoading: boolean;\n  data: T | null;\n  error: AxiosError | null;\n  refetch: () => Promise<void>;\n} {\n  const initialState: State<T> = {\n    isLoading: false,\n    data: null,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const fetchData = async (): Promise<void> => {\n    dispatch({ type: 'LOADING' });\n    try {\n      const response: AxiosResponse<T> = await callback();\n      dispatch({ type: 'SUCCESS', data: response.data });\n    } catch (e) {\n      dispatch({ type: 'ERROR', error: e as AxiosError });\n    }\n  };\n\n  useEffect(() => {\n    let isCancelled = false; // 취소 플래그\n\n    const fetchData = async () => {\n      dispatch({ type: 'LOADING' });\n      try {\n        const response: AxiosResponse<T> = await callback();\n        if (!isCancelled) {\n          // 취소되지 않았을 때만 상태 업데이트\n          dispatch({ type: 'SUCCESS', data: response.data });\n        }\n      } catch (e) {\n        if (!isCancelled) {\n          // 취소되지 않았을 때만 상태 업데이트\n          dispatch({ type: 'ERROR', error: e as AxiosError });\n        }\n      }\n    };\n\n    if (!skip) {\n      fetchData();\n    }\n\n    return () => {\n      isCancelled = true; // 클린업 시 취소 플래그 설정\n    };\n  }, deps);\n\n  const { isLoading, data, error } = state;\n\n  return { isLoading, data: data as T, error, refetch: fetchData };\n}\n\nexport default useAsync;\n"],"mappings":";AAAA,SAASA,UAAU,EAAEC,SAAS,QAAwB,OAAO;AAc7D,SAASC,OAAOA,CAAIC,KAAe,EAAEC,MAAiB,EAAY;EAChE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,SAAS;MACZ,OAAO;QACLC,SAAS,EAAE,IAAI;QACfC,IAAI,EAAE,IAAI;QACVC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,SAAS;MACZ,OAAO;QACLF,SAAS,EAAE,KAAK;QAChBC,IAAI,EAAEH,MAAM,CAACG,IAAI;QACjBC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,OAAO;MACV,OAAO;QACLF,SAAS,EAAE,KAAK;QAChBC,IAAI,EAAE,IAAI;QACVC,KAAK,EAAEJ,MAAM,CAACI;MAChB,CAAC;IACH;MACE,OAAOL,KAAK;EAChB;AACF;AAEA,SAASM,QAAQA,CACfC,QAAyC,EACzCC,IAAoB,GAAG,EAAE,EACzBC,IAAI,GAAG,KAAK,EAMZ;EAAAC,EAAA;EACA,MAAMC,YAAsB,GAAG;IAC7BR,SAAS,EAAE,KAAK;IAChBC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE;EACT,CAAC;EAED,MAAM,CAACL,KAAK,EAAEY,QAAQ,CAAC,GAAGf,UAAU,CAACE,OAAO,EAAEY,YAAY,CAAC;EAE3D,MAAME,SAAS,GAAG,MAAAA,CAAA,KAA2B;IAC3CD,QAAQ,CAAC;MAAEV,IAAI,EAAE;IAAU,CAAC,CAAC;IAC7B,IAAI;MACF,MAAMY,QAA0B,GAAG,MAAMP,QAAQ,CAAC,CAAC;MACnDK,QAAQ,CAAC;QAAEV,IAAI,EAAE,SAAS;QAAEE,IAAI,EAAEU,QAAQ,CAACV;MAAK,CAAC,CAAC;IACpD,CAAC,CAAC,OAAOW,CAAC,EAAE;MACVH,QAAQ,CAAC;QAAEV,IAAI,EAAE,OAAO;QAAEG,KAAK,EAAEU;MAAgB,CAAC,CAAC;IACrD;EACF,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACd,IAAIkB,WAAW,GAAG,KAAK,CAAC,CAAC;;IAEzB,MAAMH,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5BD,QAAQ,CAAC;QAAEV,IAAI,EAAE;MAAU,CAAC,CAAC;MAC7B,IAAI;QACF,MAAMY,QAA0B,GAAG,MAAMP,QAAQ,CAAC,CAAC;QACnD,IAAI,CAACS,WAAW,EAAE;UAChB;UACAJ,QAAQ,CAAC;YAAEV,IAAI,EAAE,SAAS;YAAEE,IAAI,EAAEU,QAAQ,CAACV;UAAK,CAAC,CAAC;QACpD;MACF,CAAC,CAAC,OAAOW,CAAC,EAAE;QACV,IAAI,CAACC,WAAW,EAAE;UAChB;UACAJ,QAAQ,CAAC;YAAEV,IAAI,EAAE,OAAO;YAAEG,KAAK,EAAEU;UAAgB,CAAC,CAAC;QACrD;MACF;IACF,CAAC;IAED,IAAI,CAACN,IAAI,EAAE;MACTI,SAAS,CAAC,CAAC;IACb;IAEA,OAAO,MAAM;MACXG,WAAW,GAAG,IAAI,CAAC,CAAC;IACtB,CAAC;EACH,CAAC,EAAER,IAAI,CAAC;EAER,MAAM;IAAEL,SAAS;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGL,KAAK;EAExC,OAAO;IAAEG,SAAS;IAAEC,IAAI,EAAEA,IAAS;IAAEC,KAAK;IAAEY,OAAO,EAAEJ;EAAU,CAAC;AAClE;AAACH,EAAA,CA3DQJ,QAAQ;AA6DjB,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}