{"ast":null,"code":"import axios from 'axios';\nimport { BASE_URL } from '../constants/api';\nimport { ACCESS_TOKEN } from '../constants/login';\nexport const axiosInstanceWithoutBearer = axios.create({\n  baseURL: BASE_URL\n});\nexport const axiosInstanceWithBearer = axios.create({\n  baseURL: BASE_URL\n});\naxiosInstanceWithBearer.interceptors.request.use(config => {\n  const accessToken = localStorage.getItem(ACCESS_TOKEN);\n  config.headers['Authorization'] = `Bearer ${accessToken}`;\n  return config;\n}, error => {\n  return Promise.reject(error);\n});","map":{"version":3,"names":["axios","BASE_URL","ACCESS_TOKEN","axiosInstanceWithoutBearer","create","baseURL","axiosInstanceWithBearer","interceptors","request","use","config","accessToken","localStorage","getItem","headers","error","Promise","reject"],"sources":["/Users/sarang_daddy/Documents/second-hand/frontend/src/api/axios.ts"],"sourcesContent":["import axios from 'axios';\n\nimport { BASE_URL } from '../constants/api';\nimport { ACCESS_TOKEN } from '../constants/login';\n\nexport const axiosInstanceWithoutBearer = axios.create({\n  baseURL: BASE_URL,\n});\n\nexport const axiosInstanceWithBearer = axios.create({\n  baseURL: BASE_URL,\n});\n\naxiosInstanceWithBearer.interceptors.request.use(\n  (config) => {\n    const accessToken = localStorage.getItem(ACCESS_TOKEN);\n    config.headers['Authorization'] = `Bearer ${accessToken}`;\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  },\n);\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,YAAY,QAAQ,oBAAoB;AAEjD,OAAO,MAAMC,0BAA0B,GAAGH,KAAK,CAACI,MAAM,CAAC;EACrDC,OAAO,EAAEJ;AACX,CAAC,CAAC;AAEF,OAAO,MAAMK,uBAAuB,GAAGN,KAAK,CAACI,MAAM,CAAC;EAClDC,OAAO,EAAEJ;AACX,CAAC,CAAC;AAEFK,uBAAuB,CAACC,YAAY,CAACC,OAAO,CAACC,GAAG,CAC7CC,MAAM,IAAK;EACV,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAACX,YAAY,CAAC;EACtDQ,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAI,UAASH,WAAY,EAAC;EACzD,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}