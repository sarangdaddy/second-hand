{"ast":null,"code":"var _jsxFileName = \"/Users/sarang_daddy/Documents/second-hand/frontend/src/context/Auth.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useEffect, useContext } from 'react';\nimport { ACCESS_TOKEN } from '../constants/login';\nimport { getMembers } from '../api/member';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userInfo, setUserInfo] = useState({\n    nickname: '',\n    profileUrl: '',\n    locationDatas: []\n  });\n  const handleLogin = accessToken => {\n    localStorage.setItem(ACCESS_TOKEN, accessToken);\n    setIsLoggedIn(true);\n  };\n  const handleLogout = () => {\n    localStorage.removeItem(ACCESS_TOKEN);\n    setIsLoggedIn(false);\n  };\n  useEffect(() => {\n    const accessToken = localStorage.getItem(ACCESS_TOKEN);\n    setIsLoggedIn(!!accessToken);\n  }, []);\n  useEffect(() => {\n    if (!isLoggedIn) {\n      setUserInfo({\n        nickname: '',\n        profileUrl: '',\n        locationDatas: []\n      });\n      return; // 로그인 상태가 아니면 추가 작업을 수행하지 않음\n    }\n\n    let isCancelled = false;\n    const fetchUserInfo = async () => {\n      const accessToken = localStorage.getItem(ACCESS_TOKEN);\n      const res = await getMembers(accessToken);\n      const {\n        data\n      } = res;\n      if (!isCancelled) {\n        console.log('Setting user info:', data.data);\n        setUserInfo({\n          nickname: data.data.nickname,\n          profileUrl: data.data.profileUrl,\n          locationDatas: data.data.locationDatas\n        });\n      } else {\n        console.log('User info fetch was cancelled.');\n      }\n    };\n    fetchUserInfo();\n    return () => {\n      console.log('Cleanup function called.');\n      isCancelled = true; // 컴포넌트가 언마운트되거나 다시 렌더링되기 전에 호출됨\n    };\n  }, [isLoggedIn]);\n  const handleUpdateUserInfo = async () => {\n    const accessToken = localStorage.getItem(ACCESS_TOKEN);\n    const res = await getMembers(accessToken);\n    const {\n      data\n    } = res;\n    setUserInfo({\n      nickname: data.data.nickname,\n      profileUrl: data.data.profileUrl,\n      locationDatas: data.data.locationDatas\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      userInfo,\n      handleLogin,\n      handleLogout,\n      handleUpdateUserInfo\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"2cwZ/QkZzsPAJp2/1RfV7XyeF04=\");\n_c = AuthProvider;\nconst useAuthContext = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuthContext must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuthContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport { AuthProvider, useAuthContext };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useContext","ACCESS_TOKEN","getMembers","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isLoggedIn","setIsLoggedIn","userInfo","setUserInfo","nickname","profileUrl","locationDatas","handleLogin","accessToken","localStorage","setItem","handleLogout","removeItem","getItem","isCancelled","fetchUserInfo","res","data","console","log","handleUpdateUserInfo","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuthContext","_s2","context","Error","$RefreshReg$"],"sources":["/Users/sarang_daddy/Documents/second-hand/frontend/src/context/Auth.tsx"],"sourcesContent":["import {\n  createContext,\n  useState,\n  useEffect,\n  ReactNode,\n  useContext,\n} from 'react';\n\nimport { ACCESS_TOKEN } from '../constants/login';\nimport { getMembers } from '../api/member';\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\ninterface UserInfo {\n  locationDatas: Array<any>;\n  nickname: string;\n  profileUrl: string;\n}\n\ninterface AuthContextValue {\n  isLoggedIn: boolean;\n  userInfo: UserInfo;\n  handleLogin: (accessToken: string) => void;\n  handleLogout: () => void;\n  handleUpdateUserInfo: () => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextValue | null>(null);\n\nconst AuthProvider = ({ children }: AuthProviderProps) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userInfo, setUserInfo] = useState({\n    nickname: '',\n    profileUrl: '',\n    locationDatas: [],\n  });\n\n  const handleLogin = (accessToken: string) => {\n    localStorage.setItem(ACCESS_TOKEN, accessToken);\n    setIsLoggedIn(true);\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem(ACCESS_TOKEN);\n    setIsLoggedIn(false);\n  };\n\n  useEffect(() => {\n    const accessToken = localStorage.getItem(ACCESS_TOKEN);\n    setIsLoggedIn(!!accessToken);\n  }, []);\n\n  useEffect(() => {\n    if (!isLoggedIn) {\n      setUserInfo({\n        nickname: '',\n        profileUrl: '',\n        locationDatas: [],\n      });\n\n      return; // 로그인 상태가 아니면 추가 작업을 수행하지 않음\n    }\n\n    let isCancelled = false;\n\n    const fetchUserInfo = async () => {\n      const accessToken = localStorage.getItem(ACCESS_TOKEN);\n      const res = await getMembers(accessToken);\n      const { data } = res;\n\n      if (!isCancelled) {\n        console.log('Setting user info:', data.data);\n        setUserInfo({\n          nickname: data.data.nickname,\n          profileUrl: data.data.profileUrl,\n          locationDatas: data.data.locationDatas,\n        });\n      } else {\n        console.log('User info fetch was cancelled.');\n      }\n    };\n\n    fetchUserInfo();\n\n    return () => {\n      console.log('Cleanup function called.');\n      isCancelled = true; // 컴포넌트가 언마운트되거나 다시 렌더링되기 전에 호출됨\n    };\n  }, [isLoggedIn]);\n\n  const handleUpdateUserInfo = async () => {\n    const accessToken = localStorage.getItem(ACCESS_TOKEN);\n    const res = await getMembers(accessToken);\n    const { data } = res;\n\n    setUserInfo({\n      nickname: data.data.nickname,\n      profileUrl: data.data.profileUrl,\n      locationDatas: data.data.locationDatas,\n    });\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn,\n        userInfo,\n        handleLogin,\n        handleLogout,\n        handleUpdateUserInfo,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nconst useAuthContext = (): AuthContextValue => {\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error('useAuthContext must be used within an AuthProvider');\n  }\n\n  return context;\n};\n\nexport { AuthProvider, useAuthContext };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}