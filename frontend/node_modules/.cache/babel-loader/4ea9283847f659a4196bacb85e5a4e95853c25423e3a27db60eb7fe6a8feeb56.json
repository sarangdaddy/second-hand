{"ast":null,"code":"var _jsxFileName = \"/Users/sarang_daddy/Documents/second-hand/frontend/src/components/DetailTapBar/index.tsx\",\n  _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport * as S from './styles';\nimport { ACCESS_TOKEN } from '../../constants/login';\nimport { CHATROOM } from '../../constants/routeUrl';\nimport { getRoomsList, postNewChatRoom } from '../../api/chat';\nimport { formatNumber } from '../../utils/formatNumber';\nimport Button from '../Button';\nimport Icon from '../Icon';\n\n// TODO : 함수를 실행하는 부모 컴포넌트 하나가 존재한다면 패치 컴포넌트? 에러 처리가 쉬워진다. (숙제)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DetailTapBar = ({\n  price,\n  curProductsId,\n  isMyProduct\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const accessToken = localStorage.getItem(ACCESS_TOKEN);\n  const handleChatClick = async () => {\n    if (curProductsId) {\n      try {\n        // 방 생성 전에 있는 전체방 리스트 확인하기\n        const roomsList = await getRoomsList(accessToken);\n        // 현재 제품 ID와 일치하는 방이 있는지 확인\n        const matchedRoom = roomsList.find(room => String(room.productId) === curProductsId);\n        if (matchedRoom) {\n          // 일치하는 방으로 이동\n          enterChatRoom(matchedRoom.roomId);\n        } else {\n          // 일치하는 방이 없으면 새로운 방 생성\n          await createChatRoom(curProductsId);\n        }\n      } catch (error) {\n        console.error('방 생성 에러:', error);\n      }\n    }\n  };\n\n  // 방이 없다면 curProductsId와 accessToken으로 방 생성\n  const createChatRoom = async curProductsId => {\n    try {\n      const createdRoomId = await postNewChatRoom(accessToken, curProductsId);\n      // 생성된 방으로 이동\n      enterChatRoom(createdRoomId);\n    } catch (error) {\n      console.error('방 생성 에러:', error);\n    }\n  };\n\n  // 방으로 이동\n  const enterChatRoom = roomId => {\n    sessionStorage.setItem('curRoomId', roomId);\n    if (curProductsId) sessionStorage.setItem('curProductsId', curProductsId);\n    navigate(`${CHATROOM}/${roomId}`);\n  };\n\n  // TODO: 방이 있으면 \"입장\" 업으면 \"채팅하기\" 버튼 상태 변경 필요\n  // TODO: 관심 제품이면 하트 색 주기\n  // TODO: 판매자 확인하고 내 제품이면 채팅시작하기 없어야함\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(S.DetailTapBarContainer, {\n      children: /*#__PURE__*/_jsxDEV(S.Menu, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(S.Left, {\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              name: \"heart\",\n              width: \"27\",\n              height: \"28\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), price !== null && /*#__PURE__*/_jsxDEV(S.Price, {\n              children: [formatNumber(price), \"\\uC6D0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(S.Right, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            active: !!curProductsId,\n            onClick: handleChatClick,\n            children: \"\\uCC44\\uD305\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(DetailTapBar, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = DetailTapBar;\nexport default DetailTapBar;\nvar _c;\n$RefreshReg$(_c, \"DetailTapBar\");","map":{"version":3,"names":["useNavigate","S","ACCESS_TOKEN","CHATROOM","getRoomsList","postNewChatRoom","formatNumber","Button","Icon","jsxDEV","_jsxDEV","Fragment","_Fragment","DetailTapBar","price","curProductsId","isMyProduct","_s","navigate","accessToken","localStorage","getItem","handleChatClick","roomsList","matchedRoom","find","room","String","productId","enterChatRoom","roomId","createChatRoom","error","console","createdRoomId","sessionStorage","setItem","children","DetailTapBarContainer","Menu","Left","name","width","height","fileName","_jsxFileName","lineNumber","columnNumber","Price","Right","active","onClick","_c","$RefreshReg$"],"sources":["/Users/sarang_daddy/Documents/second-hand/frontend/src/components/DetailTapBar/index.tsx"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\n\nimport * as S from './styles';\n\nimport { ACCESS_TOKEN } from '../../constants/login';\nimport { CHATROOM } from '../../constants/routeUrl';\nimport { getRoomsList, postNewChatRoom } from '../../api/chat';\nimport { formatNumber } from '../../utils/formatNumber';\nimport Button from '../Button';\nimport Icon from '../Icon';\n\n// TODO : 함수를 실행하는 부모 컴포넌트 하나가 존재한다면 패치 컴포넌트? 에러 처리가 쉬워진다. (숙제)\n\ninterface DetailTapBarProps {\n  price: number | null;\n  curProductsId: string | undefined;\n  isMyProduct: boolean;\n}\n\ninterface Room {\n  roomId: string;\n  productId: string;\n  sellerId: number;\n  buyerId: number;\n}\n\nconst DetailTapBar = ({\n  price,\n  curProductsId,\n  isMyProduct,\n}: DetailTapBarProps) => {\n  const navigate = useNavigate();\n  const accessToken = localStorage.getItem(ACCESS_TOKEN);\n\n  const handleChatClick = async () => {\n    if (curProductsId) {\n      try {\n        // 방 생성 전에 있는 전체방 리스트 확인하기\n        const roomsList = await getRoomsList(accessToken);\n        // 현재 제품 ID와 일치하는 방이 있는지 확인\n        const matchedRoom = roomsList.find(\n          (room: Room) => String(room.productId) === curProductsId,\n        );\n\n        if (matchedRoom) {\n          // 일치하는 방으로 이동\n          enterChatRoom(matchedRoom.roomId);\n        } else {\n          // 일치하는 방이 없으면 새로운 방 생성\n          await createChatRoom(curProductsId);\n        }\n      } catch (error) {\n        console.error('방 생성 에러:', error);\n      }\n    }\n  };\n\n  // 방이 없다면 curProductsId와 accessToken으로 방 생성\n  const createChatRoom = async (curProductsId: string) => {\n    try {\n      const createdRoomId = await postNewChatRoom(accessToken, curProductsId);\n      // 생성된 방으로 이동\n      enterChatRoom(createdRoomId);\n    } catch (error) {\n      console.error('방 생성 에러:', error);\n    }\n  };\n\n  // 방으로 이동\n  const enterChatRoom = (roomId: string) => {\n    sessionStorage.setItem('curRoomId', roomId);\n    if (curProductsId) sessionStorage.setItem('curProductsId', curProductsId);\n    navigate(`${CHATROOM}/${roomId}`);\n  };\n\n  // TODO: 방이 있으면 \"입장\" 업으면 \"채팅하기\" 버튼 상태 변경 필요\n  // TODO: 관심 제품이면 하트 색 주기\n  // TODO: 판매자 확인하고 내 제품이면 채팅시작하기 없어야함\n\n  return (\n    <>\n      <S.DetailTapBarContainer>\n        <S.Menu>\n          <div>\n            <S.Left>\n              <Icon name=\"heart\" width=\"27\" height=\"28\" />\n              {price !== null && <S.Price>{formatNumber(price)}원</S.Price>}\n            </S.Left>\n          </div>\n          <S.Right>\n            <Button active={!!curProductsId} onClick={handleChatClick}>\n              채팅하기\n            </Button>\n          </S.Right>\n        </S.Menu>\n      </S.DetailTapBarContainer>\n    </>\n  );\n};\n\nexport default DetailTapBar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}