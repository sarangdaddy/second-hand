{"ast":null,"code":"var _jsxFileName = \"/Users/sarang_daddy/Documents/second-hand/frontend/src/components/ChatInputBar/index.tsx\";\nimport * as S from './styles';\nimport Icon from '../Icon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatInputBar = ({\n  onChange,\n  sendHandler\n}) => {\n  const handleInputKeyPress = event => {\n    if (event.key === 'Enter') {\n      const inputElement = event.currentTarget;\n      const inputValue = inputElement.value;\n      if (inputValue) {\n        sendHandler(inputValue);\n        onChange('');\n        inputElement.value = '';\n      }\n    }\n  };\n  const handleButtonClick = () => {\n    const inputElement = document.getElementById('chatInput');\n    const inputValue = inputElement.value;\n    if (inputValue) {\n      sendHandler(inputValue);\n      inputElement.value = '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(S.ChatInputContainer, {\n      children: /*#__PURE__*/_jsxDEV(S.Menu, {\n        children: [/*#__PURE__*/_jsxDEV(S.Left, {\n          children: /*#__PURE__*/_jsxDEV(S.ChatInput, {\n            id: \"chatInput\",\n            placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n            onKeyDown: handleInputKeyPress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(S.Right, {\n          onClick: handleButtonClick,\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"arrowUp\",\n            fill: \"white\",\n            width: \"17\",\n            height: \"17\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = ChatInputBar;\nexport default ChatInputBar;\nvar _c;\n$RefreshReg$(_c, \"ChatInputBar\");","map":{"version":3,"names":["S","Icon","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatInputBar","onChange","sendHandler","handleInputKeyPress","event","key","inputElement","currentTarget","inputValue","value","handleButtonClick","document","getElementById","children","ChatInputContainer","Menu","Left","ChatInput","id","placeholder","onKeyDown","fileName","_jsxFileName","lineNumber","columnNumber","Right","onClick","name","fill","width","height","_c","$RefreshReg$"],"sources":["/Users/sarang_daddy/Documents/second-hand/frontend/src/components/ChatInputBar/index.tsx"],"sourcesContent":["import * as S from './styles';\n\nimport Icon from '../Icon';\ninterface ChatInputBarProps {\n  onChange: (value: string) => void;\n  sendHandler: (value: string) => void;\n}\n\nconst ChatInputBar = ({ onChange, sendHandler }: ChatInputBarProps) => {\n  const handleInputKeyPress = (\n    event: React.KeyboardEvent<HTMLInputElement>,\n  ) => {\n    if (event.key === 'Enter') {\n      const inputElement = event.currentTarget;\n      const inputValue = inputElement.value;\n      if (inputValue) {\n        sendHandler(inputValue);\n        onChange('');\n        inputElement.value = '';\n      }\n    }\n  };\n\n  const handleButtonClick = () => {\n    const inputElement = document.getElementById(\n      'chatInput',\n    ) as HTMLInputElement;\n    const inputValue = inputElement.value;\n    if (inputValue) {\n      sendHandler(inputValue);\n      inputElement.value = '';\n    }\n  };\n\n  return (\n    <>\n      <S.ChatInputContainer>\n        <S.Menu>\n          <S.Left>\n            <S.ChatInput\n              id=\"chatInput\"\n              placeholder=\"내용을 입력하세요.\"\n              onKeyDown={handleInputKeyPress}\n            />\n          </S.Left>\n          <S.Right onClick={handleButtonClick}>\n            <Icon name=\"arrowUp\" fill=\"white\" width=\"17\" height=\"17\" />\n          </S.Right>\n        </S.Menu>\n      </S.ChatInputContainer>\n    </>\n  );\n};\n\nexport default ChatInputBar;\n"],"mappings":";AAAA,OAAO,KAAKA,CAAC,MAAM,UAAU;AAE7B,OAAOC,IAAI,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAM3B,MAAMC,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAA+B,CAAC,KAAK;EACrE,MAAMC,mBAAmB,GACvBC,KAA4C,IACzC;IACH,IAAIA,KAAK,CAACC,GAAG,KAAK,OAAO,EAAE;MACzB,MAAMC,YAAY,GAAGF,KAAK,CAACG,aAAa;MACxC,MAAMC,UAAU,GAAGF,YAAY,CAACG,KAAK;MACrC,IAAID,UAAU,EAAE;QACdN,WAAW,CAACM,UAAU,CAAC;QACvBP,QAAQ,CAAC,EAAE,CAAC;QACZK,YAAY,CAACG,KAAK,GAAG,EAAE;MACzB;IACF;EACF,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMJ,YAAY,GAAGK,QAAQ,CAACC,cAAc,CAC1C,WACF,CAAqB;IACrB,MAAMJ,UAAU,GAAGF,YAAY,CAACG,KAAK;IACrC,IAAID,UAAU,EAAE;MACdN,WAAW,CAACM,UAAU,CAAC;MACvBF,YAAY,CAACG,KAAK,GAAG,EAAE;IACzB;EACF,CAAC;EAED,oBACEZ,OAAA,CAAAE,SAAA;IAAAc,QAAA,eACEhB,OAAA,CAACH,CAAC,CAACoB,kBAAkB;MAAAD,QAAA,eACnBhB,OAAA,CAACH,CAAC,CAACqB,IAAI;QAAAF,QAAA,gBACLhB,OAAA,CAACH,CAAC,CAACsB,IAAI;UAAAH,QAAA,eACLhB,OAAA,CAACH,CAAC,CAACuB,SAAS;YACVC,EAAE,EAAC,WAAW;YACdC,WAAW,EAAC,oDAAY;YACxBC,SAAS,EAAEjB;UAAoB;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,eACT3B,OAAA,CAACH,CAAC,CAAC+B,KAAK;UAACC,OAAO,EAAEhB,iBAAkB;UAAAG,QAAA,eAClChB,OAAA,CAACF,IAAI;YAACgC,IAAI,EAAC,SAAS;YAACC,IAAI,EAAC,OAAO;YAACC,KAAK,EAAC,IAAI;YAACC,MAAM,EAAC;UAAI;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACW;EAAC,gBACvB,CAAC;AAEP,CAAC;AAACO,EAAA,GA5CI/B,YAAY;AA8ClB,eAAeA,YAAY;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}