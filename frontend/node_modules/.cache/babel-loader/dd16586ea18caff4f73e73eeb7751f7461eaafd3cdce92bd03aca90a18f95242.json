{"ast":null,"code":"var _jsxFileName = \"/Users/sarang_daddy/Documents/second-hand/frontend/src/pages/Home/index.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useAuthContext } from '../../context/Auth';\nimport { getProducts } from '../../api/product';\nimport * as S from './styles';\nimport NavBarHome from '../../components/NavBarHome';\nimport SecondHandItem from '../../components/SecondHandItem';\nimport ErrorPage from '../Error';\nimport { CATEGORY, ITEM_DETAIL, SALES_ITEM } from '../../constants/routeUrl';\nimport Button from '../../components/Button';\nimport Icon from '../../components/Icon';\nimport { defaultLocation } from '../../constants/defaultValues';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// TODO : 무한 스크롤 구현하기\n// TODO : useMemo로 최적화 하기\nconst HomePage = () => {\n  _s();\n  const navigate = useNavigate();\n  const userData = useAuthContext();\n  const isLoggedIn = userData.isLoggedIn;\n  const [curLocationData, setCurLocationData] = useState([]);\n  const [itemList, setItemList] = useState([]);\n  const params = useParams();\n  const categoryId = params.categoryId;\n  const fetchUserData = () => {\n    const userLocationData = isLoggedIn === true ? userData.userInfo.locationDatas : defaultLocation;\n    setCurLocationData(userLocationData);\n  };\n  const fetchProductsData = async () => {\n    const curLocation = curLocationData.find(locationInfo => locationInfo.mainLocationState === true);\n    if (curLocation) {\n      const curLocationId = curLocation.locationId;\n      const {\n        data: productsData\n      } = await getProducts(curLocationId, categoryId);\n      setItemList(productsData === null || productsData === void 0 ? void 0 : productsData.data);\n    }\n  };\n  useEffect(() => {\n    fetchUserData();\n  }, [userData]);\n  useEffect(() => {\n    fetchProductsData();\n  }, [curLocationData, categoryId]);\n\n  // TODO : 로딩페이지 만들기\n  const isResultEmpty = (itemList === null || itemList === void 0 ? void 0 : itemList.length) === 0;\n  const handleIconClick = () => {\n    navigate(CATEGORY);\n  };\n  const handleFABClick = () => {\n    if (isLoggedIn) {\n      navigate(SALES_ITEM);\n    }\n  };\n  const handleItemClick = productId => {\n    navigate(`${ITEM_DETAIL}/${productId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBarHome, {\n      type: \"medium\",\n      iconOnClick: handleIconClick,\n      userLocationDatas: curLocationData,\n      isLoggedIn: isLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), !isResultEmpty ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: itemList === null || itemList === void 0 ? void 0 : itemList.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleItemClick(item.productId),\n          children: /*#__PURE__*/_jsxDEV(SecondHandItem, {\n            title: item.title,\n            updatedAt: item.updatedAt,\n            salesStatus: item.salesStatus,\n            price: item.price,\n            location: item.location,\n            chatRoomCount: item.chatRoomCount,\n            watchlistCount: item.watchlistCount,\n            isWatchlistChecked: item.isWatchlistChecked,\n            productMainImgUrl: item.productMainImgUrl,\n            isSetEditOption: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this)\n        }, item.productId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(S.ButtonPosition, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        circle: true,\n        active: true,\n        onClick: handleFABClick,\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          name: \"symbol\",\n          width: \"18\",\n          height: \"20\",\n          fill: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(HomePage, \"mbuo7Tg5cxFGU9FVHEk1ae0q6Gw=\", false, function () {\n  return [useNavigate, useAuthContext, useParams];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["useEffect","useState","useNavigate","useParams","useAuthContext","getProducts","S","NavBarHome","SecondHandItem","ErrorPage","CATEGORY","ITEM_DETAIL","SALES_ITEM","Button","Icon","defaultLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","HomePage","_s","navigate","userData","isLoggedIn","curLocationData","setCurLocationData","itemList","setItemList","params","categoryId","fetchUserData","userLocationData","userInfo","locationDatas","fetchProductsData","curLocation","find","locationInfo","mainLocationState","curLocationId","locationId","data","productsData","isResultEmpty","length","handleIconClick","handleFABClick","handleItemClick","productId","children","type","iconOnClick","userLocationDatas","fileName","_jsxFileName","lineNumber","columnNumber","map","item","onClick","title","updatedAt","salesStatus","price","location","chatRoomCount","watchlistCount","isWatchlistChecked","productMainImgUrl","isSetEditOption","ButtonPosition","circle","active","name","width","height","fill","_c","$RefreshReg$"],"sources":["/Users/sarang_daddy/Documents/second-hand/frontend/src/pages/Home/index.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport { useAuthContext } from '../../context/Auth';\nimport { getProducts } from '../../api/product';\n\nimport * as S from './styles';\nimport NavBarHome from '../../components/NavBarHome';\nimport SecondHandItem from '../../components/SecondHandItem';\nimport ErrorPage from '../Error';\nimport { CATEGORY, ITEM_DETAIL, SALES_ITEM } from '../../constants/routeUrl';\nimport Button from '../../components/Button';\nimport Icon from '../../components/Icon';\nimport { defaultLocation } from '../../constants/defaultValues';\n\ninterface Location {\n  locationId: number;\n  locationDetails: string;\n  locationShortening: string;\n  mainLocationState: boolean;\n}\n\ninterface Item {\n  productId: number;\n  createAt: string;\n  title: string;\n  salesStatus: '판매중' | '예약중' | '판매완료';\n  updatedAt: string;\n  price: number | null;\n  location: string;\n  chatRoomCount: number;\n  watchlistCount: number;\n  isWatchlistChecked: boolean;\n  productMainImgUrl: string;\n  isSetEditOption?: boolean;\n}\n\n// TODO : 무한 스크롤 구현하기\n// TODO : useMemo로 최적화 하기\n\nconst HomePage = () => {\n  const navigate = useNavigate();\n  const userData = useAuthContext();\n  const isLoggedIn = userData.isLoggedIn;\n  const [curLocationData, setCurLocationData] = useState<Location[]>([]);\n  const [itemList, setItemList] = useState<Item[]>([]);\n  const params = useParams();\n  const categoryId = params.categoryId;\n\n  const fetchUserData = () => {\n    const userLocationData =\n      isLoggedIn === true ? userData.userInfo.locationDatas : defaultLocation;\n\n    setCurLocationData(userLocationData);\n  };\n\n  const fetchProductsData = async () => {\n    const curLocation = curLocationData.find(\n      (locationInfo) => locationInfo.mainLocationState === true,\n    );\n\n    if (curLocation) {\n      const curLocationId = curLocation.locationId;\n\n      const { data: productsData } = await getProducts(\n        curLocationId,\n        categoryId,\n      );\n      setItemList(productsData?.data);\n    }\n  };\n\n  useEffect(() => {\n    fetchUserData();\n  }, [userData]);\n\n  useEffect(() => {\n    fetchProductsData();\n  }, [curLocationData, categoryId]);\n\n  // TODO : 로딩페이지 만들기\n  const isResultEmpty: boolean = itemList?.length === 0;\n\n  const handleIconClick = () => {\n    navigate(CATEGORY);\n  };\n\n  const handleFABClick = () => {\n    if (isLoggedIn) {\n      navigate(SALES_ITEM);\n    }\n  };\n\n  const handleItemClick = (productId: number) => {\n    navigate(`${ITEM_DETAIL}/${productId}`);\n  };\n\n  return (\n    <>\n      <NavBarHome\n        type=\"medium\"\n        iconOnClick={handleIconClick}\n        userLocationDatas={curLocationData}\n        isLoggedIn={isLoggedIn}\n      />\n      {!isResultEmpty ? (\n        <div>\n          {itemList?.map((item: Item) => {\n            return (\n              <li\n                key={item.productId}\n                onClick={() => handleItemClick(item.productId)}\n              >\n                <SecondHandItem\n                  title={item.title}\n                  updatedAt={item.updatedAt}\n                  salesStatus={item.salesStatus}\n                  price={item.price}\n                  location={item.location}\n                  chatRoomCount={item.chatRoomCount}\n                  watchlistCount={item.watchlistCount}\n                  isWatchlistChecked={item.isWatchlistChecked}\n                  productMainImgUrl={item.productMainImgUrl}\n                  isSetEditOption={false}\n                />\n              </li>\n            );\n          })}\n        </div>\n      ) : (\n        <ErrorPage />\n      )}\n      <S.ButtonPosition>\n        <Button circle active onClick={handleFABClick}>\n          <Icon name=\"symbol\" width=\"18\" height=\"20\" fill=\"white\" />\n        </Button>\n      </S.ButtonPosition>\n    </>\n  );\n};\n\nexport default HomePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}