{"ast":null,"code":"var _jsxFileName = \"/Users/sarang_daddy/Documents/second-hand/frontend/src/components/UploadTitle/index.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useContext } from 'react';\nimport * as S from './styles';\nimport { postSalesItemContext } from '../../context/SalesItem/useContext';\nimport Icon from '../Icon';\nimport useAsync from '../../hooks/useAsync';\nimport { getCategory } from '../../api/category';\n\n// TODO : 카테고리 더 보기 기능 추가 필요\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UploadTitle = () => {\n  _s();\n  const {\n    data\n  } = useAsync(getCategory);\n  const categoryList = data === null || data === void 0 ? void 0 : data.data;\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const [hasInputValue, setHasInputValue] = useState(false);\n  const [chooseCategory, setChooseCategory] = useState(null);\n  const {\n    setPostObject\n  } = useContext(postSalesItemContext);\n  useEffect(() => {\n    if (hasInputValue) {\n      const shuffledCategories = categoryList === null || categoryList === void 0 ? void 0 : categoryList.sort(() => 0.5 - Math.random());\n      const selectedCategories = shuffledCategories === null || shuffledCategories === void 0 ? void 0 : shuffledCategories.slice(0, 3);\n      setSelectedCategories(selectedCategories);\n    } else {\n      setPostObject(prevPostObject => ({\n        ...prevPostObject,\n        title: null,\n        categoryId: null\n      }));\n    }\n  }, [hasInputValue]);\n  const handleTitleInput = event => {\n    const inputValue = event.target.value;\n    const hasValue = inputValue !== '';\n    if (hasValue) {\n      setHasInputValue(true);\n    } else {\n      setHasInputValue(false);\n      setSelectedCategories([]);\n      setChooseCategory(null);\n    }\n    setPostObject(prevPostObject => ({\n      ...prevPostObject,\n      title: inputValue\n    }));\n  };\n  const handleCategoryChoice = categoryId => {\n    setChooseCategory(categoryId);\n    setPostObject(prevPostObject => ({\n      ...prevPostObject,\n      categoryId: categoryId\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(S.UploadTitle, {\n      children: [/*#__PURE__*/_jsxDEV(S.Title, {\n        children: /*#__PURE__*/_jsxDEV(S.inputTitle, {\n          placeholder: \"\\uAE00\\uC81C\\uBAA9\",\n          type: \"text\",\n          onChange: handleTitleInput,\n          maxLength: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), hasInputValue && /*#__PURE__*/_jsxDEV(S.Contents, {\n        children: [/*#__PURE__*/_jsxDEV(S.Categories, {\n          children: selectedCategories.map(category => /*#__PURE__*/_jsxDEV(S.Category, {\n            onClick: () => handleCategoryChoice(category.categoryId),\n            isActive: chooseCategory === category.categoryId,\n            children: category.title\n          }, category.categoryId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(S.MoreIcon, {\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"chevronRight\",\n            height: \"11\",\n            width: \"22\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(UploadTitle, \"tURaC8FQ1wJwBeNaFUqljbijB24=\", false, function () {\n  return [useAsync];\n});\n_c = UploadTitle;\nexport default UploadTitle;\nvar _c;\n$RefreshReg$(_c, \"UploadTitle\");","map":{"version":3,"names":["useEffect","useState","useContext","S","postSalesItemContext","Icon","useAsync","getCategory","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadTitle","_s","data","categoryList","selectedCategories","setSelectedCategories","hasInputValue","setHasInputValue","chooseCategory","setChooseCategory","setPostObject","shuffledCategories","sort","Math","random","slice","prevPostObject","title","categoryId","handleTitleInput","event","inputValue","target","value","hasValue","handleCategoryChoice","children","Title","inputTitle","placeholder","type","onChange","maxLength","fileName","_jsxFileName","lineNumber","columnNumber","Contents","Categories","map","category","Category","onClick","isActive","MoreIcon","name","height","width","_c","$RefreshReg$"],"sources":["/Users/sarang_daddy/Documents/second-hand/frontend/src/components/UploadTitle/index.tsx"],"sourcesContent":["import { useEffect, useState, useContext } from 'react';\n\nimport * as S from './styles';\n\nimport {\n  postSalesItemContext,\n  PostObjectType,\n} from '../../context/SalesItem/useContext';\nimport Icon from '../Icon';\nimport useAsync from '../../hooks/useAsync';\nimport { getCategory } from '../../api/category';\n\n// TODO : 카테고리 더 보기 기능 추가 필요\n\ninterface Category {\n  categoryId: number;\n  title: string;\n  categoryImgUrl: string;\n}\n\nconst UploadTitle = () => {\n  const { data } = useAsync(getCategory);\n  const categoryList: Category[] = data?.data;\n\n  const [selectedCategories, setSelectedCategories] = useState<Category[]>([]);\n  const [hasInputValue, setHasInputValue] = useState<boolean>(false);\n  const [chooseCategory, setChooseCategory] = useState<number | null>(null);\n\n  const { setPostObject } = useContext(postSalesItemContext);\n\n  useEffect(() => {\n    if (hasInputValue) {\n      const shuffledCategories = categoryList?.sort(() => 0.5 - Math.random());\n      const selectedCategories = shuffledCategories?.slice(0, 3);\n      setSelectedCategories(selectedCategories);\n    } else {\n      setPostObject((prevPostObject: PostObjectType) => ({\n        ...prevPostObject,\n        title: null,\n        categoryId: null,\n      }));\n    }\n  }, [hasInputValue]);\n\n  const handleTitleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const inputValue = event.target.value;\n    const hasValue = inputValue !== '';\n\n    if (hasValue) {\n      setHasInputValue(true);\n    } else {\n      setHasInputValue(false);\n      setSelectedCategories([]);\n      setChooseCategory(null);\n    }\n\n    setPostObject((prevPostObject: PostObjectType) => ({\n      ...prevPostObject,\n      title: inputValue,\n    }));\n  };\n\n  const handleCategoryChoice = (categoryId: number) => {\n    setChooseCategory(categoryId);\n\n    setPostObject((prevPostObject: PostObjectType) => ({\n      ...prevPostObject,\n      categoryId: categoryId,\n    }));\n  };\n\n  return (\n    <>\n      <S.UploadTitle>\n        <S.Title>\n          <S.inputTitle\n            placeholder=\"글제목\"\n            type=\"text\"\n            onChange={handleTitleInput}\n            maxLength={30}\n          />\n        </S.Title>\n        {hasInputValue && (\n          <S.Contents>\n            <S.Categories>\n              {selectedCategories.map((category) => (\n                <S.Category\n                  key={category.categoryId}\n                  onClick={() => handleCategoryChoice(category.categoryId)}\n                  isActive={chooseCategory === category.categoryId}\n                >\n                  {category.title}\n                </S.Category>\n              ))}\n            </S.Categories>\n            <S.MoreIcon>\n              {/*TODO(sarang_daddy) : 카테고리 목록 리스트로 이동 추가해야함.*/}\n              <Icon name=\"chevronRight\" height=\"11\" width=\"22\" />\n            </S.MoreIcon>\n          </S.Contents>\n        )}\n      </S.UploadTitle>\n    </>\n  );\n};\n\nexport default UploadTitle;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}