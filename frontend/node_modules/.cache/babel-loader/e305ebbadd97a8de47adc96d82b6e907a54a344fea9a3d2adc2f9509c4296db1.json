{"ast":null,"code":"var _jsxFileName = \"/Users/sarang_daddy/Documents/second-hand/frontend/src/components/ChatRoom/intex.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport useAsync from '../../hooks/useAsync';\nimport { ACCESS_TOKEN } from '../../constants/login';\nimport { getProductsDetail } from '../../api/product';\nimport { getChatDetails } from '../../api/chat';\nimport * as S from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatRoom = ({\n  roomId,\n  productId,\n  sellerNickName,\n  sellerProfileUrl,\n  onClick\n}) => {\n  _s();\n  const accessToken = localStorage.getItem(ACCESS_TOKEN);\n  const {\n    data\n  } = useAsync(() => getProductsDetail(productId, accessToken));\n  const selectedItem = data === null || data === void 0 ? void 0 : data.data;\n  const [chatHistory, setChatHistory] = useState(null);\n  useEffect(() => {\n    const checkChatDetails = async () => {\n      const ignore = false;\n      try {\n        const chatDetails = await getChatDetails(accessToken, roomId);\n        if (!ignore) {\n          setChatHistory(chatDetails);\n        }\n      } catch (error) {\n        console.error('채팅 내역 불러오기 에러:', error);\n      }\n    };\n    checkChatDetails();\n  }, [accessToken, roomId]);\n  console.log(chatHistory);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(S.ItemContainer, {\n      onClick: onClick,\n      children: [/*#__PURE__*/_jsxDEV(S.SellerImg, {\n        imageURI: sellerProfileUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.ItemInfo, {\n        children: [/*#__PURE__*/_jsxDEV(S.ColumnTop, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: sellerNickName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(S.ColumnBot, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.ItemImage, {\n        imageURI: selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.imageList[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ChatRoom, \"fdWMG9LA5ALFj9GUbfZFvek0ASI=\", false, function () {\n  return [useAsync];\n});\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["useState","useEffect","useAsync","ACCESS_TOKEN","getProductsDetail","getChatDetails","S","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatRoom","roomId","productId","sellerNickName","sellerProfileUrl","onClick","_s","accessToken","localStorage","getItem","data","selectedItem","chatHistory","setChatHistory","checkChatDetails","ignore","chatDetails","error","console","log","children","ItemContainer","SellerImg","imageURI","fileName","_jsxFileName","lineNumber","columnNumber","ItemInfo","ColumnTop","ColumnBot","ItemImage","imageList","_c","$RefreshReg$"],"sources":["/Users/sarang_daddy/Documents/second-hand/frontend/src/components/ChatRoom/intex.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nimport useAsync from '../../hooks/useAsync';\nimport { ACCESS_TOKEN } from '../../constants/login';\nimport { getProductsDetail } from '../../api/product';\nimport { getChatDetails } from '../../api/chat';\n\nimport * as S from './styles';\nimport { ItemDetail } from '../../constants/types';\nimport { ChatHistoryProps } from '../../constants/types';\n\ninterface ChatRoomProps {\n  roomId: string;\n  productId: string | undefined;\n  sellerNickName: string;\n  sellerProfileUrl: string;\n  onClick: () => void;\n}\n\nconst ChatRoom = ({\n  roomId,\n  productId,\n  sellerNickName,\n  sellerProfileUrl,\n  onClick,\n}: ChatRoomProps) => {\n  const accessToken = localStorage.getItem(ACCESS_TOKEN);\n  const { data } = useAsync(() => getProductsDetail(productId, accessToken));\n  const selectedItem: ItemDetail = data?.data;\n  const [chatHistory, setChatHistory] = useState<ChatHistoryProps[] | null>(\n    null,\n  );\n\n  useEffect(() => {\n    const checkChatDetails = async () => {\n      const ignore = false;\n\n      try {\n        const chatDetails = await getChatDetails(accessToken, roomId);\n\n        if (!ignore) {\n          setChatHistory(chatDetails);\n        }\n      } catch (error) {\n        console.error('채팅 내역 불러오기 에러:', error);\n      }\n    };\n    checkChatDetails();\n  }, [accessToken, roomId]);\n\n  console.log(chatHistory);\n\n  return (\n    <>\n      <S.ItemContainer onClick={onClick}>\n        <S.SellerImg imageURI={sellerProfileUrl} />\n        <S.ItemInfo>\n          <S.ColumnTop>\n            <span>{sellerNickName}</span>\n          </S.ColumnTop>\n          <S.ColumnBot>{}</S.ColumnBot>\n        </S.ItemInfo>\n        <S.ItemImage imageURI={selectedItem?.imageList[0]} />\n      </S.ItemContainer>\n    </>\n  );\n};\n\nexport default ChatRoom;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}